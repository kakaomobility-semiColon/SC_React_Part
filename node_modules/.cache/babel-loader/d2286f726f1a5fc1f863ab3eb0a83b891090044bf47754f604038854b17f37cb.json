{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nexport const useKakaomap = () => {\n  _s();\n  const [markerData, setMarkerData] = useState([]);\n  const fetchMarkerData = async () => {\n    try {\n      const serverUrl = process.env.REACT_APP_SERVER_URL;\n      if (!serverUrl) {\n        throw new Error('Server URL is not defined');\n      }\n      const response = await axios.get(`${serverUrl}/charger`);\n      if (response.data && response.data.result) {\n        return response.data.result;\n      } else {\n        throw new Error('Invalid response from server');\n      }\n    } catch (error) {\n      console.error('Error fetching marker data:', error);\n      return [];\n    }\n  };\n  const mapscript = useCallback(() => {\n    if (window.kakao && window.kakao.maps) {\n      const container = document.getElementById('map');\n      const options = {\n        center: new window.kakao.maps.LatLng(37.336382765356035, 127.26531823399158),\n        level: 3\n      };\n      const map = new window.kakao.maps.Map(container, options);\n      map.addOverlayMapTypeId(window.kakao.maps.MapTypeId.TRAFFIC); // 실시간 교통\n      const mapTypeControl = new window.kakao.maps.MapTypeControl();\n      map.addControl(mapTypeControl, window.kakao.maps.ControlPosition.RIGHT);\n      const zoomControl = new window.kakao.maps.ZoomControl();\n      map.addControl(zoomControl, window.kakao.maps.ControlPosition.RIGHT);\n      const overlays = [];\n      markerData.forEach(data => {\n        const position = new window.kakao.maps.LatLng(data.lat, data.lng);\n        const content = `<div class=\"wrap\"> \n                          <div class=\"info\"> \n                              <div class=\"title\"> \n                                  ${data.name}  \n                              </div> \n                              <div class=\"body\"> \n                                  <div class=\"desc\"> \n                                      <div class=\"ellipsis\">${data.address}</div> \n                                      <div class=\"jibun ellipsis\">${data.name}는</div> \n                                      <div class=\"jibun ellipsis\">${data.operatorName}회사에서 만든 충전기이다.</div> \n                                  </div> \n                                  <button class=\"img\" id=\"bookmarkButton\"></button> \n                              </div> \n                          </div> \n                      </div>`;\n        const marker = new window.kakao.maps.Marker({\n          position: position,\n          map: map\n        });\n        const overlay = new window.kakao.maps.CustomOverlay({\n          position: position,\n          content: content,\n          yAnchor: 1\n        });\n        window.kakao.maps.event.addListener(marker, \"click\", function () {\n          closeOverlays();\n          overlay.setMap(map);\n        });\n        overlays.push(overlay);\n      });\n      window.kakao.maps.event.addListener(map, \"click\", function () {\n        closeOverlays();\n      });\n      function closeOverlays() {\n        overlays.forEach(function (overlay) {\n          overlay.setMap(null);\n        });\n        const searchBar = document.querySelector('.search-block');\n        if (searchBar) {\n          searchBar.style.display = 'none';\n        }\n      }\n      const points = markerData.map(data => new window.kakao.maps.LatLng(data.lat, data.lng));\n      const bounds = new window.kakao.maps.LatLngBounds();\n      points.forEach(point => bounds.extend(point));\n      map.setBounds(bounds);\n      window.kakao.maps.event.addListener(map, 'idle', async function () {\n        const bound = map.getBounds();\n        const swLatlng = bound.getSouthWest();\n        const neLatlng = bound.getNorthEast();\n        console.log('<p>남서쪽 위경도 : ' + swLatlng.toString() + ',' + '북동쪽 위경도 : ' + neLatlng.toString());\n        const url = `${process.env.REACT_APP_SERVER_URL}/charger/search/marker?swLat=${swLatlng.getLat()}&swLng=${swLatlng.getLng()}&neLat=${neLatlng.getLat()}&neLng=${neLatlng.getLng()}`;\n        try {\n          const response = await axios.get(url);\n          console.log('서버 응답', response.data);\n        } catch (error) {\n          console.error('GET 요청 에러', error);\n        }\n      });\n    }\n  }, [markerData]);\n  useEffect(() => {\n    (async () => {\n      const data = await fetchMarkerData();\n      setMarkerData(data);\n    })();\n    const script = document.createElement(\"script\");\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAOMAP_API_KEY}&libraries=services,drawing`;\n    script.async = true;\n    script.onload = () => {\n      mapscript();\n    };\n    script.onerror = error => {\n      console.error(\"Error loading Kakao maps script:\", error);\n    };\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, [mapscript]);\n  return null;\n};\n_s(useKakaomap, \"C6WPdG3BFbDZNl5rKxPcrRAUqCk=\");","map":{"version":3,"names":["useCallback","useEffect","useState","axios","useKakaomap","_s","markerData","setMarkerData","fetchMarkerData","serverUrl","process","env","REACT_APP_SERVER_URL","Error","response","get","data","result","error","console","mapscript","window","kakao","maps","container","document","getElementById","options","center","LatLng","level","map","Map","addOverlayMapTypeId","MapTypeId","TRAFFIC","mapTypeControl","MapTypeControl","addControl","ControlPosition","RIGHT","zoomControl","ZoomControl","overlays","forEach","position","lat","lng","content","name","address","operatorName","marker","Marker","overlay","CustomOverlay","yAnchor","event","addListener","closeOverlays","setMap","push","searchBar","querySelector","style","display","points","bounds","LatLngBounds","point","extend","setBounds","bound","getBounds","swLatlng","getSouthWest","neLatlng","getNorthEast","log","toString","url","getLat","getLng","script","createElement","src","REACT_APP_KAKAOMAP_API_KEY","async","onload","onerror","body","appendChild","removeChild"],"sources":["C:/Users/seokj/Desktop/kakaomobility/SC_React_Part/src/component/useKakaomap.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useKakaomap = () => {\r\n  const [markerData, setMarkerData] = useState([]);\r\n\r\n  const fetchMarkerData = async () => {\r\n    try {\r\n      const serverUrl = process.env.REACT_APP_SERVER_URL;\r\n      if (!serverUrl) {\r\n        throw new Error('Server URL is not defined');\r\n      }\r\n\r\n      const response = await axios.get(`${serverUrl}/charger`);\r\n      if (response.data && response.data.result) {\r\n        return response.data.result;\r\n      } else {\r\n        throw new Error('Invalid response from server');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching marker data:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const mapscript = useCallback(() => {\r\n    if (window.kakao && window.kakao.maps) {\r\n      const container = document.getElementById('map');\r\n      const options = {\r\n        center: new window.kakao.maps.LatLng(37.336382765356035, 127.26531823399158),\r\n        level: 3\r\n      };\r\n      const map = new window.kakao.maps.Map(container, options);\r\n\r\n      map.addOverlayMapTypeId(window.kakao.maps.MapTypeId.TRAFFIC); // 실시간 교통\r\n      const mapTypeControl = new window.kakao.maps.MapTypeControl();\r\n      map.addControl(mapTypeControl, window.kakao.maps.ControlPosition.RIGHT);\r\n      const zoomControl = new window.kakao.maps.ZoomControl();\r\n      map.addControl(zoomControl, window.kakao.maps.ControlPosition.RIGHT);\r\n\r\n      const overlays = [];\r\n\r\n      markerData.forEach((data) => {\r\n        const position = new window.kakao.maps.LatLng(data.lat, data.lng);\r\n        const content = `<div class=\"wrap\"> \r\n                          <div class=\"info\"> \r\n                              <div class=\"title\"> \r\n                                  ${data.name}  \r\n                              </div> \r\n                              <div class=\"body\"> \r\n                                  <div class=\"desc\"> \r\n                                      <div class=\"ellipsis\">${data.address}</div> \r\n                                      <div class=\"jibun ellipsis\">${data.name}는</div> \r\n                                      <div class=\"jibun ellipsis\">${data.operatorName}회사에서 만든 충전기이다.</div> \r\n                                  </div> \r\n                                  <button class=\"img\" id=\"bookmarkButton\"></button> \r\n                              </div> \r\n                          </div> \r\n                      </div>`;\r\n\r\n        const marker = new window.kakao.maps.Marker({\r\n          position: position,\r\n          map: map\r\n        });\r\n\r\n        const overlay = new window.kakao.maps.CustomOverlay({\r\n          position: position,\r\n          content: content,\r\n          yAnchor: 1\r\n        });\r\n\r\n        window.kakao.maps.event.addListener(marker, \"click\", function () {\r\n          closeOverlays();\r\n          overlay.setMap(map);\r\n        });\r\n\r\n        overlays.push(overlay);\r\n      });\r\n\r\n      window.kakao.maps.event.addListener(map, \"click\", function () {\r\n        closeOverlays();\r\n      });\r\n\r\n      function closeOverlays() {\r\n        overlays.forEach(function(overlay) {\r\n          overlay.setMap(null); \r\n        });\r\n        const searchBar = document.querySelector('.search-block');\r\n        if (searchBar) {\r\n          searchBar.style.display = 'none';\r\n        }\r\n      }\r\n\r\n      const points = markerData.map(data => new window.kakao.maps.LatLng(data.lat, data.lng));\r\n      const bounds = new window.kakao.maps.LatLngBounds();\r\n      points.forEach(point => bounds.extend(point));\r\n      map.setBounds(bounds);\r\n\r\n      window.kakao.maps.event.addListener(map,'idle', async function() {\r\n        const bound = map.getBounds();\r\n        const swLatlng = bound.getSouthWest();\r\n        const neLatlng = bound.getNorthEast();\r\n        \r\n        console.log('<p>남서쪽 위경도 : ' + swLatlng.toString() + ',' + \r\n        '북동쪽 위경도 : '+ neLatlng.toString());\r\n\r\n        const url = `${process.env.REACT_APP_SERVER_URL}/charger/search/marker?swLat=${swLatlng.getLat()}&swLng=${swLatlng.getLng()}&neLat=${neLatlng.getLat()}&neLng=${neLatlng.getLng()}`;\r\n        try {\r\n          const response = await axios.get(url);\r\n          console.log('서버 응답', response.data);\r\n        } catch (error) {\r\n          console.error('GET 요청 에러', error);\r\n        }\r\n      });\r\n    }\r\n  }, [markerData]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = await fetchMarkerData();\r\n      setMarkerData(data);\r\n    })();\r\n\r\n    const script = document.createElement(\"script\");\r\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAOMAP_API_KEY}&libraries=services,drawing`;\r\n    script.async = true;\r\n    script.onload = () => {\r\n      mapscript();\r\n    };\r\n    script.onerror = (error) => {\r\n      console.error(\"Error loading Kakao maps script:\", error);\r\n    };\r\n    document.body.appendChild(script);\r\n\r\n    return () => {\r\n      document.body.removeChild(script);\r\n    };\r\n  }, [mapscript]);\r\n\r\n  return null;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}