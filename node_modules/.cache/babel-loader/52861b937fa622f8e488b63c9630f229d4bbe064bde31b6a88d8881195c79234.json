{"ast":null,"code":"var _jsxFileName = \"/Users/goseoyeong/Documents/\\u1112\\u1161\\u11AB\\u1100\\u116E\\u11A8\\u110B\\u116C\\u1103\\u1162/4-1/\\u110F\\u1162\\u11B8\\u1109\\u1173\\u1110\\u1169\\u11AB\\u1109\\u1165\\u11AF\\u1100\\u1168\\u1106\\u1175\\u11BE\\u1109\\u1175\\u11AF\\u1109\\u1173\\u11B8/semi/SC_React_Part/src/component/Kakao.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './Kakao.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Kakao() {\n  _s();\n  const [markerData, setMarkerData] = useState([]);\n  useEffect(() => {\n    const fetchMarkerData = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/charger/search/marker`);\n        if (response.data.success) {\n          setMarkerData(response.data.result);\n        } else {\n          console.error('서버 응답 실패:', response.data.message);\n        }\n      } catch (error) {\n        console.error('GET 요청 에러:', error);\n      }\n    };\n    fetchMarkerData();\n  }, []);\n  useEffect(() => {\n    if (window.kakao && window.kakao.maps) {\n      const container = document.getElementById('map');\n      const options = {\n        center: new window.kakao.maps.LatLng(37.336382765356035, 127.26531823399158),\n        level: 3\n      };\n      const map = new window.kakao.maps.Map(container, options);\n\n      // 지도 확대 축소를 제어할 수 있는 줌 컨트롤을 생성합니다\n      const zoomControl = new window.kakao.maps.ZoomControl();\n      map.addControl(zoomControl, window.kakao.maps.ControlPosition.RIGHT);\n\n      // 마커 생성\n      markerData.forEach(place => {\n        const marker = new window.kakao.maps.Marker({\n          map: map,\n          position: new window.kakao.maps.LatLng(place.lat, place.lng)\n        });\n      });\n      window.kakao.maps.event.addListener(map, 'idle', function () {\n        const bound = map.getBounds();\n        const swLatlng = bound.getSouthWest();\n        const neLatlng = bound.getNorthEast();\n        console.log('<p>남서쪽 위경도 : ' + swLatlng.toString() + ',' + '북동쪽 위경도 : ' + neLatlng.toString());\n\n        // 서버에 GET 요청\n        const url = `${process.env.REACT_APP_SERVER_URL}/charger/search/marker?swLat=${swLatlng.lat()}&swLng=${swLatlng.lng()}&neLat=${neLatlng.lat()}&neLng=${neLatlng.lng()}`;\n        axios.get(url).then(response => {\n          console.log('서버 응답', response.data);\n          // 응답을 받은 후에 마커 업데이트\n          setMarkerData(response.data.result);\n        }).catch(error => {\n          console.log('GET 요청 에러', error);\n        });\n      });\n    }\n  }, [markerData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: \"100%\",\n      height: \"100vh\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(Kakao, \"Vg44OZ9Qqrpy8zrGdfu8WjFaMMo=\");\n_c = Kakao;\nexport default Kakao;\nvar _c;\n$RefreshReg$(_c, \"Kakao\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Kakao","_s","markerData","setMarkerData","fetchMarkerData","response","get","process","env","REACT_APP_SERVER_URL","data","success","result","console","error","message","window","kakao","maps","container","document","getElementById","options","center","LatLng","level","map","Map","zoomControl","ZoomControl","addControl","ControlPosition","RIGHT","forEach","place","marker","Marker","position","lat","lng","event","addListener","bound","getBounds","swLatlng","getSouthWest","neLatlng","getNorthEast","log","toString","url","then","catch","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goseoyeong/Documents/한국외대/4-1/캡스톤설계및실습/semi/SC_React_Part/src/component/Kakao.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './Kakao.css'\nimport axios from \"axios\";\n\nfunction Kakao() {\n    const [markerData, setMarkerData] = useState([]);\n\n    useEffect(() => {\n        const fetchMarkerData = async () => {\n            try {\n                const response = await axios.get(`${process.env.REACT_APP_SERVER_URL}/charger/search/marker`);\n                if (response.data.success) {\n                    setMarkerData(response.data.result);\n                } else {\n                    console.error('서버 응답 실패:', response.data.message);\n                }\n            } catch (error) {\n                console.error('GET 요청 에러:', error);\n            }\n        };\n\n        fetchMarkerData();\n    }, []);\n\n    useEffect(() => {\n        if (window.kakao && window.kakao.maps) {\n            const container = document.getElementById('map');\n            const options = {\n                center: new window.kakao.maps.LatLng(37.336382765356035, 127.26531823399158),\n                level: 3\n            };\n            const map = new window.kakao.maps.Map(container, options);\n\n            // 지도 확대 축소를 제어할 수 있는 줌 컨트롤을 생성합니다\n            const zoomControl = new window.kakao.maps.ZoomControl();\n            map.addControl(zoomControl, window.kakao.maps.ControlPosition.RIGHT);\n\n            // 마커 생성\n            markerData.forEach(place => {\n                const marker = new window.kakao.maps.Marker({\n                    map: map,\n                    position: new window.kakao.maps.LatLng(place.lat, place.lng),\n                });\n            });\n\n            window.kakao.maps.event.addListener(map, 'idle', function () {\n                const bound = map.getBounds();\n                const swLatlng = bound.getSouthWest();\n                const neLatlng = bound.getNorthEast();\n\n                console.log('<p>남서쪽 위경도 : ' + swLatlng.toString() + ',' +\n                    '북동쪽 위경도 : ' + neLatlng.toString());\n\n                // 서버에 GET 요청\n                const url = `${process.env.REACT_APP_SERVER_URL}/charger/search/marker?swLat=${swLatlng.lat()}&swLng=${swLatlng.lng()}&neLat=${neLatlng.lat()}&neLng=${neLatlng.lng()}`;\n                axios.get(url)\n                    .then(response => {\n                        console.log('서버 응답', response.data);\n                        // 응답을 받은 후에 마커 업데이트\n                        setMarkerData(response.data.result);\n                    })\n                    .catch(error => {\n                        console.log('GET 요청 에러', error);\n                    });\n            });\n        }\n    }, [markerData]);\n\n    return (\n        <div id=\"map\" style={{ width: \"100%\", height: \"100vh\" }}></div>\n    );\n}\n\nexport default Kakao;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}