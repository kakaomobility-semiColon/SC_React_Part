{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seokj\\\\Desktop\\\\kakaomobility\\\\SC_React_Part\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport Header from './component/Header';\nimport Kakao from './component/Kakao';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [chargers, setChargers] = useState([]); // 충전소 정보 상태\n  const [searchResults, setSearchResults] = useState([]); // 검색 결과 상태\n\n  // 검색 함수\n  const searchPlaces = keyword => {\n    const results = chargers.filter(charger => {\n      return charger.name.includes(keyword) || charger.address.includes(keyword);\n    });\n    setSearchResults(results);\n  };\n\n  // 검색 결과를 받아오는 함수\n  const getChargersData = () => {\n    // 여기서 충전소 데이터를 가져오는 로직을 추가합니다.\n    // 데이터를 가져온 뒤 setChargers로 상태를 업데이트합니다.\n    const data = [/* 여기에 데이터를 넣어주세요 */];\n    setChargers(data);\n  };\n\n  // 컴포넌트가 마운트될 때 충전소 데이터를 가져옵니다.\n  useEffect(() => {\n    getChargersData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Kakao, {\n        chargers: searchResults.length > 0 ? searchResults : chargers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        onSearch: searchPlaces\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hpwiSBQ1GokpeBNzyggTiH6lhmc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Kakao","BrowserRouter","Router","jsxDEV","_jsxDEV","App","_s","chargers","setChargers","searchResults","setSearchResults","searchPlaces","keyword","results","filter","charger","name","includes","address","getChargersData","data","children","className","length","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["C:/Users/seokj/Desktop/kakaomobility/SC_React_Part/src/App.js"],"sourcesContent":["// App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Header from './component/Header';\r\nimport Kakao from './component/Kakao';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [chargers, setChargers] = useState([]); // 충전소 정보 상태\r\n  const [searchResults, setSearchResults] = useState([]); // 검색 결과 상태\r\n\r\n  // 검색 함수\r\n  const searchPlaces = (keyword) => {\r\n    const results = chargers.filter((charger) => {\r\n      return charger.name.includes(keyword) || charger.address.includes(keyword);\r\n    });\r\n    setSearchResults(results);\r\n  };\r\n\r\n  // 검색 결과를 받아오는 함수\r\n  const getChargersData = () => {\r\n    // 여기서 충전소 데이터를 가져오는 로직을 추가합니다.\r\n    // 데이터를 가져온 뒤 setChargers로 상태를 업데이트합니다.\r\n    const data = [/* 여기에 데이터를 넣어주세요 */];\r\n    setChargers(data);\r\n  };\r\n\r\n  // 컴포넌트가 마운트될 때 충전소 데이터를 가져옵니다.\r\n  useEffect(() => {\r\n    getChargersData();\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className='App'>\r\n        <Kakao chargers={searchResults.length > 0 ? searchResults : chargers} />\r\n        <Header onSearch={searchPlaces} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,aAAa,IAAIC,MAAM,QAAQ,kBAAkB;AAC1D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExD;EACA,MAAMc,YAAY,GAAIC,OAAO,IAAK;IAChC,MAAMC,OAAO,GAAGN,QAAQ,CAACO,MAAM,CAAEC,OAAO,IAAK;MAC3C,OAAOA,OAAO,CAACC,IAAI,CAACC,QAAQ,CAACL,OAAO,CAAC,IAAIG,OAAO,CAACG,OAAO,CAACD,QAAQ,CAACL,OAAO,CAAC;IAC5E,CAAC,CAAC;IACFF,gBAAgB,CAACG,OAAO,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACA;IACA,MAAMC,IAAI,GAAG,CAAC,qBAAqB;IACnCZ,WAAW,CAACY,IAAI,CAAC;EACnB,CAAC;;EAED;EACAtB,SAAS,CAAC,MAAM;IACdqB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA,CAACF,MAAM;IAAAmB,QAAA,eACLjB,OAAA;MAAKkB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBjB,OAAA,CAACJ,KAAK;QAACO,QAAQ,EAAEE,aAAa,CAACc,MAAM,GAAG,CAAC,GAAGd,aAAa,GAAGF;MAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxEvB,OAAA,CAACL,MAAM;QAAC6B,QAAQ,EAAEjB;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACrB,EAAA,CAjCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}