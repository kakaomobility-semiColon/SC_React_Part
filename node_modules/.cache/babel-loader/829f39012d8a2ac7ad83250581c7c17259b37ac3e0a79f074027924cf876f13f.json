{"ast":null,"code":"var _jsxFileName = \"/Users/goseoyeong/Documents/\\u1112\\u1161\\u11AB\\u1100\\u116E\\u11A8\\u110B\\u116C\\u1103\\u1162/4-1/\\u110F\\u1162\\u11B8\\u1109\\u1173\\u1110\\u1169\\u11AB\\u1109\\u1165\\u11AF\\u1100\\u1168\\u1106\\u1175\\u11BE\\u1109\\u1175\\u11AF\\u1109\\u1173\\u11B8/semi/SC_React_Part/src/component/Kakao.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { markerdata } from \"./Data/markerData\";\nimport './Kakao.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Kakao() {\n  _s();\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAOMAP_API_KEY}&libraries=services,drawing`;\n    script.async = true;\n    script.onload = () => {\n      mapscript();\n    };\n    script.onerror = error => {\n      console.error(\"Error loading Kakao maps script:\", error);\n    };\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []);\n  const mapscript = () => {\n    //지도 표시\n    if (window.kakao && window.kakao.maps) {\n      var container = document.getElementById('map');\n      var options = {\n        center: new window.kakao.maps.LatLng(37.336382765356035, 127.26531823399158),\n        level: 3,\n        MapTypeId: window.kakao.maps.MapTypeId.ROADMAP //지도 종류\n      };\n      const map = new window.kakao.maps.Map(container, options);\n      map.addOverlayMapTypeId(window.kakao.maps.MapTypeId.TRAFFIC); //실시간 교통\n      map.addOverlayMapTypeId(window.kakao.maps.MapTypeId.ROADVIEW); //로드뷰\n      var mapTypeControl = new window.kakao.maps.MapTypeControl(); //type controller\n      map.addControl(mapTypeControl, window.kakao.maps.ControlPosition.BOTTOMRIGHT);\n      // // 지도타입 컨트롤의 지도 또는 스카이뷰 버튼을 클릭하면 호출되어 지도타입을 바꾸는 함수입니다\n      // function setMapType(maptype) { \n      //     var roadmapControl = document.getElementById('btnRoadmap');\n      //     var skyviewControl = document.getElementById('btnSkyview'); \n      //     if (maptype === 'roadmap') {\n      //         map.setMapTypeId(kakao.maps.MapTypeId.ROADMAP);    \n      //         roadmapControl.className = 'selected_btn';\n      //         skyviewControl.className = 'btn';\n      //     } else {\n      //         map.setMapTypeId(kakao.maps.MapTypeId.HYBRID);    \n      //         skyviewControl.className = 'selected_btn';\n      //         roadmapControl.className = 'btn';\n      //     }\n      // }\n\n      // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\n      var zoomControl = new window.kakao.maps.ZoomControl();\n      map.addControl(zoomControl, window.kakao.maps.ControlPosition.RIGHT);\n      var overlays = [];\n      markerdata.forEach(data => {\n        var position = new window.kakao.maps.LatLng(data.lat, data.lng);\n        var contentHTML = `<div class=\"wrap\"> \n                                <div class=\"info\"> \n                                    <div class=\"title\"> \n                                        ${data.name}\n                                    </div>\n                                    <div class=\"body\"> \n                                        <div class=\"desc\"> \n                                            <div class=\"ellipsis\">${data.address}</div> \n                                            <div class=\"jibun ellipsis\">${data.name}는</div> \n                                            <div class=\"jibun ellipsis\">${data.operatorName}회사에서 만든 충전기이다.</div> \n                                        </div> \n                                        <button class=\"img\" id=\"bookmarkButton\"></button> \n                                    </div> \n                                </div> \n                            </div>`;\n        // //content HTMLElement 생성\n        // var content = document.createElement('div');\n        // content.innerHTML = contentHTML;\n        // //event 추가\n        // var bookmarkBtn = document.createElement('button');\n        // bookmarkBtn.appendChild(document.createTextNode(''));\n        // bookmarkBtn.onclick = function () {\n        //     var currentImage = bookmarkBtn.style.backgroundImage;\n        //     if (currentImage.includes('bookmark_clicked.svg')) {\n        //         bookmarkBtn.style.backgroundImage = 'url(./SVG/bookmark.svg)';\n        //     } else {\n        //         bookmarkBtn.style.backgroundImage = 'url(./SVG/bookmark_clicked.svg)';\n        //     }\n        // }\n        // content.appendChild(bookmarkBtn);\n\n        // 마커를 표시할 지도\n        var marker = new window.kakao.maps.Marker({\n          position: position,\n          map: map\n        });\n        // customize overlay\n        var overlay = new window.kakao.maps.CustomOverlay({\n          position: position,\n          content: contentHTML,\n          yAnchor: 1\n        });\n        window.kakao.maps.event.addListener(marker, \"click\", function () {\n          closeOverlays();\n          overlay.setMap(map);\n        });\n        overlays.push(overlay);\n      });\n\n      //지도 클릭 시 모든 overlay 닫기\n      window.kakao.maps.event.addListener(map, \"click\", function () {\n        closeOverlays();\n      });\n      function closeOverlays() {\n        overlays.forEach(function (overlay) {\n          overlay.setMap(null);\n        });\n      }\n      //지도 범위 재설정\n      var points = markerdata.map(data => new window.kakao.maps.LatLng(data.lat, data.lng));\n      var bounds = new window.kakao.maps.LatLngBounds();\n      points.forEach(point => bounds.extend(point));\n      map.setBounds(bounds);\n      window.kakao.maps.event.addListener(map, 'bounds_changed', function () {\n        var bound = map.getBounds();\n        var swLatlng = bound.getSouthWest();\n        var neLatlng = bound.getNorthEast();\n        console.log('<p>남서쪽 위경도 : ' + swLatlng.toString() + ',' + '북동쪽 위경도 : ' + neLatlng.toString());\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: \"100%\",\n      height: \"100vh\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n}\n_s(Kakao, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Kakao;\nexport default Kakao;\nvar _c;\n$RefreshReg$(_c, \"Kakao\");","map":{"version":3,"names":["React","useEffect","markerdata","jsxDEV","_jsxDEV","Kakao","_s","script","document","createElement","src","process","env","REACT_APP_KAKAOMAP_API_KEY","async","onload","mapscript","onerror","error","console","body","appendChild","removeChild","window","kakao","maps","container","getElementById","options","center","LatLng","level","MapTypeId","ROADMAP","map","Map","addOverlayMapTypeId","TRAFFIC","ROADVIEW","mapTypeControl","MapTypeControl","addControl","ControlPosition","BOTTOMRIGHT","zoomControl","ZoomControl","RIGHT","overlays","forEach","data","position","lat","lng","contentHTML","name","address","operatorName","marker","Marker","overlay","CustomOverlay","content","yAnchor","event","addListener","closeOverlays","setMap","push","points","bounds","LatLngBounds","point","extend","setBounds","bound","getBounds","swLatlng","getSouthWest","neLatlng","getNorthEast","log","toString","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goseoyeong/Documents/한국외대/4-1/캡스톤설계및실습/semi/SC_React_Part/src/component/Kakao.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { markerdata } from \"./Data/markerData\";\nimport './Kakao.css'\n\nfunction Kakao() {\n    useEffect(() => {\n        const script = document.createElement(\"script\");\n        script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAOMAP_API_KEY}&libraries=services,drawing`;\n        script.async = true;\n        script.onload = () => {\n            mapscript();\n        };\n        script.onerror = (error) => {\n            console.error(\"Error loading Kakao maps script:\", error);\n        };\n        document.body.appendChild(script);\n\n        return () => {\n            document.body.removeChild(script);\n        };\n    }, []);\n\n    const mapscript = () => {\n        //지도 표시\n        if (window.kakao && window.kakao.maps) {\n            var container = document.getElementById('map');\n            var options = {\n                center: new window.kakao.maps.LatLng(37.336382765356035, 127.26531823399158),\n                level: 3,\n                MapTypeId : window.kakao.maps.MapTypeId.ROADMAP //지도 종류\n            };\n            const map = new window.kakao.maps.Map(container, options);\n\n            map.addOverlayMapTypeId(window.kakao.maps.MapTypeId.TRAFFIC); //실시간 교통\n            map.addOverlayMapTypeId(window.kakao.maps.MapTypeId.ROADVIEW); //로드뷰\n            var mapTypeControl = new window.kakao.maps.MapTypeControl(); //type controller\n            map.addControl(mapTypeControl, window.kakao.maps.ControlPosition.BOTTOMRIGHT);\n            // // 지도타입 컨트롤의 지도 또는 스카이뷰 버튼을 클릭하면 호출되어 지도타입을 바꾸는 함수입니다\n            // function setMapType(maptype) { \n            //     var roadmapControl = document.getElementById('btnRoadmap');\n            //     var skyviewControl = document.getElementById('btnSkyview'); \n            //     if (maptype === 'roadmap') {\n            //         map.setMapTypeId(kakao.maps.MapTypeId.ROADMAP);    \n            //         roadmapControl.className = 'selected_btn';\n            //         skyviewControl.className = 'btn';\n            //     } else {\n            //         map.setMapTypeId(kakao.maps.MapTypeId.HYBRID);    \n            //         skyviewControl.className = 'selected_btn';\n            //         roadmapControl.className = 'btn';\n            //     }\n            // }\n\n            // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\n            var zoomControl = new window.kakao.maps.ZoomControl();\n            map.addControl(zoomControl, window.kakao.maps.ControlPosition.RIGHT);\n\n            var overlays = [];\n\n            markerdata.forEach((data) => {\n                var position = new window.kakao.maps.LatLng(data.lat, data.lng);\n                var contentHTML = `<div class=\"wrap\"> \n                                <div class=\"info\"> \n                                    <div class=\"title\"> \n                                        ${data.name}\n                                    </div>\n                                    <div class=\"body\"> \n                                        <div class=\"desc\"> \n                                            <div class=\"ellipsis\">${data.address}</div> \n                                            <div class=\"jibun ellipsis\">${data.name}는</div> \n                                            <div class=\"jibun ellipsis\">${data.operatorName}회사에서 만든 충전기이다.</div> \n                                        </div> \n                                        <button class=\"img\" id=\"bookmarkButton\"></button> \n                                    </div> \n                                </div> \n                            </div>`;\n                // //content HTMLElement 생성\n                // var content = document.createElement('div');\n                // content.innerHTML = contentHTML;\n                // //event 추가\n                // var bookmarkBtn = document.createElement('button');\n                // bookmarkBtn.appendChild(document.createTextNode(''));\n                // bookmarkBtn.onclick = function () {\n                //     var currentImage = bookmarkBtn.style.backgroundImage;\n                //     if (currentImage.includes('bookmark_clicked.svg')) {\n                //         bookmarkBtn.style.backgroundImage = 'url(./SVG/bookmark.svg)';\n                //     } else {\n                //         bookmarkBtn.style.backgroundImage = 'url(./SVG/bookmark_clicked.svg)';\n                //     }\n                // }\n                // content.appendChild(bookmarkBtn);\n\n                // 마커를 표시할 지도\n                var marker = new window.kakao.maps.Marker({\n                    position: position,\n                    map: map\n                });\n                // customize overlay\n                var overlay = new window.kakao.maps.CustomOverlay({\n                    position: position,\n                    content: contentHTML,\n                    yAnchor: 1\n                });\n\n                window.kakao.maps.event.addListener(marker, \"click\", function () {\n                    closeOverlays();\n                    overlay.setMap(map);\n                });\n                \n                overlays.push(overlay);\n            });\n\n            //지도 클릭 시 모든 overlay 닫기\n            window.kakao.maps.event.addListener(map, \"click\", function () {\n                closeOverlays();\n            });\n            function closeOverlays() {\n                overlays.forEach(function(overlay) {\n                    overlay.setMap(null); \n                });\n            }\n            //지도 범위 재설정\n            var points = markerdata.map(data => new window.kakao.maps.LatLng(data.lat, data.lng));\n            var bounds = new window.kakao.maps.LatLngBounds();    \n            points.forEach(point => bounds.extend(point));\n            map.setBounds(bounds);\n\n            window.kakao.maps.event.addListener(map,'bounds_changed', function() {\n                var bound = map.getBounds();\n                var swLatlng = bound.getSouthWest();\n                var neLatlng = bound.getNorthEast();\n                console.log('<p>남서쪽 위경도 : ' + swLatlng.toString() + ',' + \n                '북동쪽 위경도 : '+ neLatlng.toString());\n            })\n        }\n    };\n\n    return (\n        <div id=\"map\" style={{ width: \"100%\", height: \"100vh\" }}></div>\n    );\n}\n\nexport default Kakao;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}