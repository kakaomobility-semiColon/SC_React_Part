{"ast":null,"code":"var _jsxFileName = \"/Users/goseoyeong/Documents/\\u1112\\u1161\\u11AB\\u1100\\u116E\\u11A8\\u110B\\u116C\\u1103\\u1162/4-1/\\u110F\\u1162\\u11B8\\u1109\\u1173\\u1110\\u1169\\u11AB\\u1109\\u1165\\u11AF\\u1100\\u1168\\u1106\\u1175\\u11BE\\u1109\\u1175\\u11AF\\u1109\\u1173\\u11B8/semi/SC_React_Part/src/component/Kakao.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport './Kakao.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Kakao() {\n  _s();\n  const [markerData, setMarkerData] = useState([]);\n  const mapscript = useCallback(() => {\n    //지도 표시\n    if (window.kakao && window.kakao.maps) {\n      var container = document.getElementById('map');\n      var options = {\n        center: new window.kakao.maps.LatLng(37.336382765356035, 127.26531823399158),\n        level: 3\n      };\n      const map = new window.kakao.maps.Map(container, options);\n      map.addOverlayMapTypeId(window.kakao.maps.MapTypeId.TRAFFIC); //실시간 교통\n      var mapTypeControl = new window.kakao.maps.MapTypeControl(); //type controller\n      map.addControl(mapTypeControl, window.kakao.maps.ControlPosition.RIGHT);\n\n      // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\n      var zoomControl = new window.kakao.maps.ZoomControl();\n      map.addControl(zoomControl, window.kakao.maps.ControlPosition.RIGHT);\n      var overlays = [];\n\n      // 마커와 오버레이 추가\n      const addMarkers = data => {\n        overlays.forEach(overlay => overlay.setMap(null));\n        overlays = [];\n        data.forEach(markerData => {\n          var position = new window.kakao.maps.LatLng(markerData.lat, markerData.lng);\n          var content = `<div class=\"wrap\"> \n                                    <div class=\"info\"> \n                                        <div class=\"title\"> \n                                            ${markerData.name}  \n                                        </div> \n                                        <div class=\"body\"> \n                                            <div class=\"desc\"> \n                                                <div class=\"ellipsis\">${markerData.address}</div> \n                                                <div class=\"jibun ellipsis\">${markerData.name}는</div> \n                                                <div class=\"jibun ellipsis\">${markerData.operatorName}회사에서 만든 충전기이다.</div> \n                                            </div> \n                                            <button class=\"img\" id=\"bookmarkButton\"></button> \n                                        </div> \n                                    </div> \n                                </div>`;\n\n          // 마커를 표시할 지도\n          var marker = new window.kakao.maps.Marker({\n            position: position,\n            map: map\n          });\n          // customize overlay\n          var overlay = new window.kakao.maps.CustomOverlay({\n            position: position,\n            content: content,\n            yAnchor: 1\n          });\n          window.kakao.maps.event.addListener(marker, \"click\", function () {\n            closeOverlays();\n            overlay.setMap(map);\n          });\n          overlays.push(overlay);\n        });\n      };\n\n      //지도 클릭 시 모든 overlay 닫기\n      window.kakao.maps.event.addListener(map, \"click\", function () {\n        closeOverlays();\n      });\n      function closeOverlays() {\n        overlays.forEach(function (overlay) {\n          overlay.setMap(null);\n        });\n      }\n\n      //지도 범위 재설정\n      var points = markerData.map(data => new window.kakao.maps.LatLng(data.lat, data.lng));\n      var bounds = new window.kakao.maps.LatLngBounds();\n      points.forEach(point => bounds.extend(point));\n      map.setBounds(bounds);\n      window.kakao.maps.event.addListener(map, 'bounds_changed', function () {\n        var bound = map.getBounds();\n        var swLatlng = bound.getSouthWest();\n        var neLatlng = bound.getNorthEast();\n        console.log('남서쪽 위경도 : ' + swLatlng.toString() + ',' + '북동쪽 위경도 : ' + neLatlng.toString());\n\n        //서버에 GET 요청\n        const url = `${process.env.REACT_APP_SERVER_URL}/charger/search/marker?swLat=${swLatlng.getLat()}&swLng=${swLatlng.getLng()}&neLat=${neLatlng.getLat()}&neLng=${neLatlng.getLng()}`;\n        axios.get(url).then(response => {\n          console.log('서버 응답', response.data.result);\n          setMarkerData(response.data.result); // 상태 업데이트\n          addMarkers(response.data.result); // 새로운 데이터로 마커 업데이트\n        }).catch(error => {\n          console.log('GET 요청 에러', error);\n        });\n      });\n\n      // 초기 마커 데이터 추가\n      addMarkers(markerData);\n    }\n  }, [markerData]);\n  useEffect(() => {\n    mapscript();\n    const script = document.createElement(\"script\");\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAOMAP_API_KEY}&libraries=services,drawing`;\n    script.async = true;\n    script.onload = () => {\n      mapscript();\n    };\n    script.onerror = error => {\n      console.error(\"Error loading Kakao maps script:\", error);\n    };\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, [mapscript]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: \"100%\",\n      height: \"100vh\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n_s(Kakao, \"C6WPdG3BFbDZNl5rKxPcrRAUqCk=\");\n_c = Kakao;\nexport default Kakao;\nvar _c;\n$RefreshReg$(_c, \"Kakao\");","map":{"version":3,"names":["React","useEffect","useCallback","useState","axios","jsxDEV","_jsxDEV","Kakao","_s","markerData","setMarkerData","mapscript","window","kakao","maps","container","document","getElementById","options","center","LatLng","level","map","Map","addOverlayMapTypeId","MapTypeId","TRAFFIC","mapTypeControl","MapTypeControl","addControl","ControlPosition","RIGHT","zoomControl","ZoomControl","overlays","addMarkers","data","forEach","overlay","setMap","position","lat","lng","content","name","address","operatorName","marker","Marker","CustomOverlay","yAnchor","event","addListener","closeOverlays","push","points","bounds","LatLngBounds","point","extend","setBounds","bound","getBounds","swLatlng","getSouthWest","neLatlng","getNorthEast","console","log","toString","url","process","env","REACT_APP_SERVER_URL","getLat","getLng","get","then","response","result","catch","error","script","createElement","src","REACT_APP_KAKAOMAP_API_KEY","async","onload","onerror","body","appendChild","removeChild","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goseoyeong/Documents/한국외대/4-1/캡스톤설계및실습/semi/SC_React_Part/src/component/Kakao.js"],"sourcesContent":["import React, { useEffect, useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport './Kakao.css';\n\nfunction Kakao() {\n    const [markerData, setMarkerData] = useState([]);\n\n    const mapscript = useCallback(() => {\n        //지도 표시\n        if (window.kakao && window.kakao.maps) {\n            var container = document.getElementById('map');\n            var options = {\n                center: new window.kakao.maps.LatLng(37.336382765356035, 127.26531823399158),\n                level: 3\n            };\n            const map = new window.kakao.maps.Map(container, options);\n\n            map.addOverlayMapTypeId(window.kakao.maps.MapTypeId.TRAFFIC); //실시간 교통\n            var mapTypeControl = new window.kakao.maps.MapTypeControl(); //type controller\n            map.addControl(mapTypeControl, window.kakao.maps.ControlPosition.RIGHT);\n\n            // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다\n            var zoomControl = new window.kakao.maps.ZoomControl();\n            map.addControl(zoomControl, window.kakao.maps.ControlPosition.RIGHT);\n            \n            var overlays = [];\n\n            // 마커와 오버레이 추가\n            const addMarkers = (data) => {\n                overlays.forEach((overlay) => overlay.setMap(null));\n                overlays = [];\n\n                data.forEach((markerData) => {\n                    var position = new window.kakao.maps.LatLng(markerData.lat, markerData.lng);\n                    var content = `<div class=\"wrap\"> \n                                    <div class=\"info\"> \n                                        <div class=\"title\"> \n                                            ${markerData.name}  \n                                        </div> \n                                        <div class=\"body\"> \n                                            <div class=\"desc\"> \n                                                <div class=\"ellipsis\">${markerData.address}</div> \n                                                <div class=\"jibun ellipsis\">${markerData.name}는</div> \n                                                <div class=\"jibun ellipsis\">${markerData.operatorName}회사에서 만든 충전기이다.</div> \n                                            </div> \n                                            <button class=\"img\" id=\"bookmarkButton\"></button> \n                                        </div> \n                                    </div> \n                                </div>`;\n\n                    // 마커를 표시할 지도\n                    var marker = new window.kakao.maps.Marker({\n                        position: position,\n                        map: map\n                    });\n                    // customize overlay\n                    var overlay = new window.kakao.maps.CustomOverlay({\n                        position: position,\n                        content: content,\n                        yAnchor: 1\n                    });\n\n                    window.kakao.maps.event.addListener(marker, \"click\", function () {\n                        closeOverlays();\n                        overlay.setMap(map);\n                    });\n                    \n                    overlays.push(overlay);\n                });\n            }\n\n            //지도 클릭 시 모든 overlay 닫기\n            window.kakao.maps.event.addListener(map, \"click\", function () {\n                closeOverlays();\n            });\n\n            function closeOverlays() {\n                overlays.forEach(function(overlay) {\n                    overlay.setMap(null); \n                });\n            }\n\n            //지도 범위 재설정\n            var points = markerData.map(data => new window.kakao.maps.LatLng(data.lat, data.lng));\n            var bounds = new window.kakao.maps.LatLngBounds();    \n            points.forEach(point => bounds.extend(point));\n            map.setBounds(bounds);\n\n            window.kakao.maps.event.addListener(map, 'bounds_changed', function() {\n                var bound = map.getBounds();\n                var swLatlng = bound.getSouthWest();\n                var neLatlng = bound.getNorthEast();\n                \n                console.log('남서쪽 위경도 : ' + swLatlng.toString() + ',' + \n                '북동쪽 위경도 : ' + neLatlng.toString());\n\n                //서버에 GET 요청\n                const url = `${process.env.REACT_APP_SERVER_URL}/charger/search/marker?swLat=${swLatlng.getLat()}&swLng=${swLatlng.getLng()}&neLat=${neLatlng.getLat()}&neLng=${neLatlng.getLng()}`;\n                axios.get(url)\n                .then(response => {\n                    console.log('서버 응답', response.data.result);\n                    setMarkerData(response.data.result); // 상태 업데이트\n                    addMarkers(response.data.result); // 새로운 데이터로 마커 업데이트\n                })\n                .catch(error => {\n                    console.log('GET 요청 에러', error);\n                });\n            });\n\n            // 초기 마커 데이터 추가\n            addMarkers(markerData);\n        }\n    }, [markerData]);\n\n    useEffect(() => {\n        mapscript();\n\n        const script = document.createElement(\"script\");\n        script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAOMAP_API_KEY}&libraries=services,drawing`;\n        script.async = true;\n        script.onload = () => {\n            mapscript();\n        };\n        script.onerror = (error) => {\n            console.error(\"Error loading Kakao maps script:\", error);\n        };\n        document.body.appendChild(script);\n\n        return () => {\n            document.body.removeChild(script);\n        };\n    }, [mapscript]);\n\n    return (\n        <div id=\"map\" style={{ width: \"100%\", height: \"100vh\" }}></div>\n    );\n}\n\nexport default Kakao;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMQ,SAAS,GAAGT,WAAW,CAAC,MAAM;IAChC;IACA,IAAIU,MAAM,CAACC,KAAK,IAAID,MAAM,CAACC,KAAK,CAACC,IAAI,EAAE;MACnC,IAAIC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;MAC9C,IAAIC,OAAO,GAAG;QACVC,MAAM,EAAE,IAAIP,MAAM,CAACC,KAAK,CAACC,IAAI,CAACM,MAAM,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;QAC5EC,KAAK,EAAE;MACX,CAAC;MACD,MAAMC,GAAG,GAAG,IAAIV,MAAM,CAACC,KAAK,CAACC,IAAI,CAACS,GAAG,CAACR,SAAS,EAAEG,OAAO,CAAC;MAEzDI,GAAG,CAACE,mBAAmB,CAACZ,MAAM,CAACC,KAAK,CAACC,IAAI,CAACW,SAAS,CAACC,OAAO,CAAC,CAAC,CAAC;MAC9D,IAAIC,cAAc,GAAG,IAAIf,MAAM,CAACC,KAAK,CAACC,IAAI,CAACc,cAAc,CAAC,CAAC,CAAC,CAAC;MAC7DN,GAAG,CAACO,UAAU,CAACF,cAAc,EAAEf,MAAM,CAACC,KAAK,CAACC,IAAI,CAACgB,eAAe,CAACC,KAAK,CAAC;;MAEvE;MACA,IAAIC,WAAW,GAAG,IAAIpB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACmB,WAAW,CAAC,CAAC;MACrDX,GAAG,CAACO,UAAU,CAACG,WAAW,EAAEpB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACgB,eAAe,CAACC,KAAK,CAAC;MAEpE,IAAIG,QAAQ,GAAG,EAAE;;MAEjB;MACA,MAAMC,UAAU,GAAIC,IAAI,IAAK;QACzBF,QAAQ,CAACG,OAAO,CAAEC,OAAO,IAAKA,OAAO,CAACC,MAAM,CAAC,IAAI,CAAC,CAAC;QACnDL,QAAQ,GAAG,EAAE;QAEbE,IAAI,CAACC,OAAO,CAAE5B,UAAU,IAAK;UACzB,IAAI+B,QAAQ,GAAG,IAAI5B,MAAM,CAACC,KAAK,CAACC,IAAI,CAACM,MAAM,CAACX,UAAU,CAACgC,GAAG,EAAEhC,UAAU,CAACiC,GAAG,CAAC;UAC3E,IAAIC,OAAO,GAAI;AACnC;AACA;AACA,8CAA8ClC,UAAU,CAACmC,IAAK;AAC9D;AACA;AACA;AACA,wEAAwEnC,UAAU,CAACoC,OAAQ;AAC3F,8EAA8EpC,UAAU,CAACmC,IAAK;AAC9F,8EAA8EnC,UAAU,CAACqC,YAAa;AACtG;AACA;AACA;AACA;AACA,uCAAuC;;UAEnB;UACA,IAAIC,MAAM,GAAG,IAAInC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACkC,MAAM,CAAC;YACtCR,QAAQ,EAAEA,QAAQ;YAClBlB,GAAG,EAAEA;UACT,CAAC,CAAC;UACF;UACA,IAAIgB,OAAO,GAAG,IAAI1B,MAAM,CAACC,KAAK,CAACC,IAAI,CAACmC,aAAa,CAAC;YAC9CT,QAAQ,EAAEA,QAAQ;YAClBG,OAAO,EAAEA,OAAO;YAChBO,OAAO,EAAE;UACb,CAAC,CAAC;UAEFtC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACqC,KAAK,CAACC,WAAW,CAACL,MAAM,EAAE,OAAO,EAAE,YAAY;YAC7DM,aAAa,CAAC,CAAC;YACff,OAAO,CAACC,MAAM,CAACjB,GAAG,CAAC;UACvB,CAAC,CAAC;UAEFY,QAAQ,CAACoB,IAAI,CAAChB,OAAO,CAAC;QAC1B,CAAC,CAAC;MACN,CAAC;;MAED;MACA1B,MAAM,CAACC,KAAK,CAACC,IAAI,CAACqC,KAAK,CAACC,WAAW,CAAC9B,GAAG,EAAE,OAAO,EAAE,YAAY;QAC1D+B,aAAa,CAAC,CAAC;MACnB,CAAC,CAAC;MAEF,SAASA,aAAaA,CAAA,EAAG;QACrBnB,QAAQ,CAACG,OAAO,CAAC,UAASC,OAAO,EAAE;UAC/BA,OAAO,CAACC,MAAM,CAAC,IAAI,CAAC;QACxB,CAAC,CAAC;MACN;;MAEA;MACA,IAAIgB,MAAM,GAAG9C,UAAU,CAACa,GAAG,CAACc,IAAI,IAAI,IAAIxB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACM,MAAM,CAACgB,IAAI,CAACK,GAAG,EAAEL,IAAI,CAACM,GAAG,CAAC,CAAC;MACrF,IAAIc,MAAM,GAAG,IAAI5C,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC2C,YAAY,CAAC,CAAC;MACjDF,MAAM,CAAClB,OAAO,CAACqB,KAAK,IAAIF,MAAM,CAACG,MAAM,CAACD,KAAK,CAAC,CAAC;MAC7CpC,GAAG,CAACsC,SAAS,CAACJ,MAAM,CAAC;MAErB5C,MAAM,CAACC,KAAK,CAACC,IAAI,CAACqC,KAAK,CAACC,WAAW,CAAC9B,GAAG,EAAE,gBAAgB,EAAE,YAAW;QAClE,IAAIuC,KAAK,GAAGvC,GAAG,CAACwC,SAAS,CAAC,CAAC;QAC3B,IAAIC,QAAQ,GAAGF,KAAK,CAACG,YAAY,CAAC,CAAC;QACnC,IAAIC,QAAQ,GAAGJ,KAAK,CAACK,YAAY,CAAC,CAAC;QAEnCC,OAAO,CAACC,GAAG,CAAC,YAAY,GAAGL,QAAQ,CAACM,QAAQ,CAAC,CAAC,GAAG,GAAG,GACpD,YAAY,GAAGJ,QAAQ,CAACI,QAAQ,CAAC,CAAC,CAAC;;QAEnC;QACA,MAAMC,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,oBAAqB,gCAA+BV,QAAQ,CAACW,MAAM,CAAC,CAAE,UAASX,QAAQ,CAACY,MAAM,CAAC,CAAE,UAASV,QAAQ,CAACS,MAAM,CAAC,CAAE,UAAST,QAAQ,CAACU,MAAM,CAAC,CAAE,EAAC;QACnLvE,KAAK,CAACwE,GAAG,CAACN,GAAG,CAAC,CACbO,IAAI,CAACC,QAAQ,IAAI;UACdX,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEU,QAAQ,CAAC1C,IAAI,CAAC2C,MAAM,CAAC;UAC1CrE,aAAa,CAACoE,QAAQ,CAAC1C,IAAI,CAAC2C,MAAM,CAAC,CAAC,CAAC;UACrC5C,UAAU,CAAC2C,QAAQ,CAAC1C,IAAI,CAAC2C,MAAM,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;UACZd,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEa,KAAK,CAAC;QACnC,CAAC,CAAC;MACN,CAAC,CAAC;;MAEF;MACA9C,UAAU,CAAC1B,UAAU,CAAC;IAC1B;EACJ,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhBR,SAAS,CAAC,MAAM;IACZU,SAAS,CAAC,CAAC;IAEX,MAAMuE,MAAM,GAAGlE,QAAQ,CAACmE,aAAa,CAAC,QAAQ,CAAC;IAC/CD,MAAM,CAACE,GAAG,GAAI,0CAAyCb,OAAO,CAACC,GAAG,CAACa,0BAA2B,6BAA4B;IAC1HH,MAAM,CAACI,KAAK,GAAG,IAAI;IACnBJ,MAAM,CAACK,MAAM,GAAG,MAAM;MAClB5E,SAAS,CAAC,CAAC;IACf,CAAC;IACDuE,MAAM,CAACM,OAAO,GAAIP,KAAK,IAAK;MACxBd,OAAO,CAACc,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC5D,CAAC;IACDjE,QAAQ,CAACyE,IAAI,CAACC,WAAW,CAACR,MAAM,CAAC;IAEjC,OAAO,MAAM;MACTlE,QAAQ,CAACyE,IAAI,CAACE,WAAW,CAACT,MAAM,CAAC;IACrC,CAAC;EACL,CAAC,EAAE,CAACvE,SAAS,CAAC,CAAC;EAEf,oBACIL,OAAA;IAAKsF,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEvE;AAAC3F,EAAA,CApIQD,KAAK;AAAA6F,EAAA,GAAL7F,KAAK;AAsId,eAAeA,KAAK;AAAC,IAAA6F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}