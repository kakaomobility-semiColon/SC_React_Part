{"ast":null,"code":"var _jsxFileName = \"/Users/goseoyeong/Documents/\\u1112\\u1161\\u11AB\\u1100\\u116E\\u11A8\\u110B\\u116C\\u1103\\u1162/4-1/\\u110F\\u1162\\u11B8\\u1109\\u1173\\u1110\\u1169\\u11AB\\u1109\\u1165\\u11AF\\u1100\\u1168\\u1106\\u1175\\u11BE\\u1109\\u1175\\u11AF\\u1109\\u1173\\u11B8/semi/SC_React_Part/src/component/Kakao.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useCallback, useState } from \"react\";\nimport './Kakao.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Kakao() {\n  _s();\n  const [map, setMap] = useState(null);\n  const mapscript = useCallback(async () => {\n    // 지도 표시\n    if (window.kakao && window.kakao.maps) {\n      var container = document.getElementById('map');\n      var options = {\n        center: new window.kakao.maps.LatLng(37.336382765356035, 127.26531823399158),\n        level: 3\n      };\n      const newMap = new window.kakao.maps.Map(container, options);\n      setMap(newMap);\n\n      // 지도 확대 축소를 제어할 수 있는 줌 컨트롤을 생성합니다\n      var zoomControl = new window.kakao.maps.ZoomControl();\n      newMap.addControl(zoomControl, window.kakao.maps.ControlPosition.RIGHT);\n\n      // 지도 이동이 멈춘 후 이벤트\n      window.kakao.maps.event.addListener(newMap, 'idle', async function () {\n        var bound = newMap.getBounds();\n        var swLatlng = bound.getSouthWest();\n        var neLatlng = bound.getNorthEast();\n\n        // 서버에 GET 요청\n        const url = `${process.env.REACT_APP_SERVER_URL}/charger/search/marker?swLat=${swLatlng.getLat()}&swLng=${swLatlng.getLng()}&neLat=${neLatlng.getLat()}&neLng=${neLatlng.getLng()}`;\n        try {\n          const response = await axios.get(url);\n          if (response.data.success) {\n            const markerData = response.data.result;\n            // 기존 마커들 제거\n            newMap.removeMarkers();\n            // 새로운 마커 추가\n            markerData.forEach(data => {\n              const marker = new window.kakao.maps.Marker({\n                position: new window.kakao.maps.LatLng(data.lat, data.lng),\n                map: newMap\n              });\n            });\n          } else {\n            console.error('서버 응답 실패:', response.data.message);\n          }\n        } catch (error) {\n          console.error('GET 요청 에러:', error);\n        }\n      });\n    }\n  }, []);\n  useEffect(() => {\n    mapscript();\n    const script = document.createElement(\"script\");\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAOMAP_API_KEY}&libraries=services,drawing`;\n    script.async = true;\n    script.onload = () => {\n      mapscript();\n    };\n    script.onerror = error => {\n      console.error(\"Error loading Kakao maps script:\", error);\n    };\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, [mapscript]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: \"100%\",\n      height: \"100vh\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(Kakao, \"XSssaBV5OeeJHLmLq6eXtDFH1q0=\");\n_c = Kakao;\nexport default Kakao;\nvar _c;\n$RefreshReg$(_c, \"Kakao\");","map":{"version":3,"names":["React","useEffect","useCallback","useState","axios","jsxDEV","_jsxDEV","Kakao","_s","map","setMap","mapscript","window","kakao","maps","container","document","getElementById","options","center","LatLng","level","newMap","Map","zoomControl","ZoomControl","addControl","ControlPosition","RIGHT","event","addListener","bound","getBounds","swLatlng","getSouthWest","neLatlng","getNorthEast","url","process","env","REACT_APP_SERVER_URL","getLat","getLng","response","get","data","success","markerData","result","removeMarkers","forEach","marker","Marker","position","lat","lng","console","error","message","script","createElement","src","REACT_APP_KAKAOMAP_API_KEY","async","onload","onerror","body","appendChild","removeChild","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goseoyeong/Documents/한국외대/4-1/캡스톤설계및실습/semi/SC_React_Part/src/component/Kakao.js"],"sourcesContent":["import React, { useEffect, useCallback, useState } from \"react\";\nimport './Kakao.css'\nimport axios from \"axios\";\n\nfunction Kakao() {\n    const [map, setMap] = useState(null);\n\n    const mapscript = useCallback(async () => {\n        // 지도 표시\n        if (window.kakao && window.kakao.maps) {\n            var container = document.getElementById('map');\n            var options = {\n                center: new window.kakao.maps.LatLng(37.336382765356035, 127.26531823399158),\n                level: 3\n            };\n            const newMap = new window.kakao.maps.Map(container, options);\n            setMap(newMap);\n\n            // 지도 확대 축소를 제어할 수 있는 줌 컨트롤을 생성합니다\n            var zoomControl = new window.kakao.maps.ZoomControl();\n            newMap.addControl(zoomControl, window.kakao.maps.ControlPosition.RIGHT);\n\n            // 지도 이동이 멈춘 후 이벤트\n            window.kakao.maps.event.addListener(newMap, 'idle', async function() {\n                var bound = newMap.getBounds();\n                var swLatlng = bound.getSouthWest();\n                var neLatlng = bound.getNorthEast();\n\n                // 서버에 GET 요청\n                const url = `${process.env.REACT_APP_SERVER_URL}/charger/search/marker?swLat=${swLatlng.getLat()}&swLng=${swLatlng.getLng()}&neLat=${neLatlng.getLat()}&neLng=${neLatlng.getLng()}`;\n                try {\n                    const response = await axios.get(url);\n                    if (response.data.success) {\n                        const markerData = response.data.result;\n                        // 기존 마커들 제거\n                        newMap.removeMarkers();\n                        // 새로운 마커 추가\n                        markerData.forEach(data => {\n                            const marker = new window.kakao.maps.Marker({\n                                position: new window.kakao.maps.LatLng(data.lat, data.lng),\n                                map: newMap\n                            });\n                        });\n                    } else {\n                        console.error('서버 응답 실패:', response.data.message);\n                    }\n                } catch (error) {\n                    console.error('GET 요청 에러:', error);\n                }\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        mapscript();\n\n        const script = document.createElement(\"script\");\n        script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAOMAP_API_KEY}&libraries=services,drawing`;\n        script.async = true;\n        script.onload = () => {\n            mapscript();\n        };\n        script.onerror = (error) => {\n            console.error(\"Error loading Kakao maps script:\", error);\n        };\n        document.body.appendChild(script);\n\n        return () => {\n            document.body.removeChild(script);\n        };\n    }, [mapscript]);\n\n    return (\n        <div id=\"map\" style={{ width: \"100%\", height: \"100vh\" }}></div>\n    );\n}\n\nexport default Kakao;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}