{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport axios from 'axios';\nimport { createMarkerContent } from './markerContents';\nexport const useKakaomap = () => {\n  _s();\n  return useCallback(() => {\n    if (window.kakao && window.kakao.maps) {\n      const container = document.getElementById('container'); // 지도와 로드뷰를 감싸고 있는 div 입니다\n      const mapWrapper = document.getElementById('mapWrapper'); // 지도를 감싸고 있는 div 입니다\n      const btnRoadview = document.getElementById('btnRoadview'); // 지도 위의 로드뷰 버튼, 클릭하면 지도는 감춰지고 로드뷰가 보입니다\n      const btnMap = document.getElementById('btnMap'); // 로드뷰 위의 지도 버튼, 클릭하면 로드뷰는 감춰지고 지도가 보입니다\n      const rvContainer = document.getElementById('roadview'); // 로드뷰를 표시할 div 입니다\n      const mapContainer = document.getElementById('map'); // 지도를 표시할 div 입니다\n\n      // 지도와 로드뷰 위에 마커로 표시할 특정 장소의 좌표입니다\n      const placePosition = new window.kakao.maps.LatLng(33.450701, 126.570667);\n\n      // 지도 옵션입니다\n      const mapOption = {\n        center: placePosition,\n        // 지도의 중심좌표\n        level: 3 // 지도의 확대 레벨\n      };\n\n      // 지도를 표시할 div와 지도 옵션으로 지도를 생성합니다\n      const map = new window.kakao.maps.Map(mapContainer, mapOption);\n\n      // 로드뷰 객체를 생성합니다\n      const roadview = new window.kakao.maps.Roadview(rvContainer);\n\n      // 로드뷰의 위치를 특정 장소를 포함하는 파노라마 ID로 설정합니다\n      roadview.setPanoId(1023434522, placePosition);\n\n      // 특정 장소가 잘 보이도록 로드뷰의 적절한 시점(ViewPoint)을 설정합니다\n      roadview.setViewpoint({\n        pan: 321,\n        tilt: 0,\n        zoom: 0\n      });\n\n      // 지도 중심을 표시할 마커를 생성하고 특정 장소 위에 표시합니다\n      const mapMarker = new window.kakao.maps.Marker({\n        position: placePosition,\n        map: map\n      });\n\n      // 로드뷰 초기화가 완료되면\n      window.kakao.maps.event.addListener(roadview, 'init', function () {\n        // 로드뷰에 특정 장소를 표시할 마커를 생성하고 로드뷰 위에 표시합니다\n        const rvMarker = new window.kakao.maps.Marker({\n          position: placePosition,\n          map: roadview\n        });\n      });\n\n      // 지도와 로드뷰를 감싸고 있는 div의 class를 변경하여 지도를 숨기거나 보이게 하는 함수입니다\n      function toggleMap(active) {\n        if (active) {\n          // 지도가 보이도록 지도와 로드뷰를 감싸고 있는 div의 class를 변경합니다\n          container.className = \"view_map\";\n        } else {\n          // 지도가 숨겨지도록 지도와 로드뷰를 감싸고 있는 div의 class를 변경합니다\n          container.className = \"view_roadview\";\n        }\n      }\n\n      // 여기서부터 기존 코드를 사용하여 추가적인 설정을 진행합니다\n      map.setMaxLevel(5);\n      map.addOverlayMapTypeId(window.kakao.maps.MapTypeId.TRAFFIC);\n      const mapTypeControl = new window.kakao.maps.MapTypeControl();\n      map.addControl(mapTypeControl, window.kakao.maps.ControlPosition.RIGHT);\n      const zoomControl = new window.kakao.maps.ZoomControl();\n      map.addControl(zoomControl, window.kakao.maps.ControlPosition.RIGHT);\n      const overlays = [];\n      function closeOverlays() {\n        overlays.forEach(overlay => {\n          overlay.setMap(null);\n        });\n        const searchBar = document.querySelector('.search-block');\n        if (searchBar) {\n          searchBar.classList.add('fade-out');\n          setTimeout(() => {\n            searchBar.style.display = 'none';\n            searchBar.classList.remove('fade-out');\n          }, 500);\n        }\n      }\n      window.kakao.maps.event.addListener(map, 'idle', async function () {\n        const bound = map.getBounds();\n        const swLatlng = bound.getSouthWest();\n        const neLatlng = bound.getNorthEast();\n        console.log(`<p>남서쪽 위경도 : ${swLatlng.toString()}, 북동쪽 위경도 : ${neLatlng.toString()}</p>`);\n        const url = `/charger/search/marker?swLat=${swLatlng.getLat()}&swLng=${swLatlng.getLng()}&neLat=${neLatlng.getLat()}&neLng=${neLatlng.getLng()}`;\n        console.log('Request URL:', url);\n        try {\n          const response = await axios.get(url);\n          const markerData = response.data.result;\n          markerData.forEach(data => {\n            const position = new window.kakao.maps.LatLng(data.lat, data.lng);\n            const content = createMarkerContent(data);\n            const marker = new window.kakao.maps.Marker({\n              position: position,\n              map: map\n            });\n            const overlay = new window.kakao.maps.CustomOverlay({\n              position: position,\n              content: content,\n              yAnchor: 1\n            });\n            window.kakao.maps.event.addListener(marker, 'click', function () {\n              closeOverlays();\n              overlay.setMap(map);\n              content.addEventListener('click', e => {\n                e.stopPropagation();\n              });\n            });\n            overlays.push(overlay);\n          });\n          console.log('서버 응답', response.data);\n        } catch (error) {\n          console.error('GET 요청 에러', error);\n        }\n      });\n      window.kakao.maps.event.addListener(map, 'click', function () {\n        closeOverlays();\n      });\n      const searchBar = document.querySelector('.search-block');\n      if (searchBar) {\n        const resizeHandle = document.createElement('div');\n        resizeHandle.className = 'resize-handle';\n        searchBar.appendChild(resizeHandle);\n        let isResizing = false;\n        let startX = 0;\n        let startWidth = 0;\n        resizeHandle.addEventListener('mousedown', e => {\n          isResizing = true;\n          startX = e.clientX;\n          startWidth = searchBar.offsetWidth;\n          document.addEventListener('mousemove', onMouseMove);\n          document.addEventListener('mouseup', onMouseUp);\n        });\n        function onMouseMove(e) {\n          if (!isResizing) return;\n          const newWidth = startWidth + (e.clientX - startX);\n          if (newWidth < 435) return;\n          searchBar.style.width = `${newWidth}px`;\n        }\n        function onMouseUp() {\n          isResizing = false;\n          document.removeEventListener('mousemove', onMouseMove);\n          document.removeEventListener('mouseup', onMouseUp);\n        }\n      }\n      function moveToCurrentLocation() {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(position => {\n            const lat = position.coords.latitude;\n            const lng = position.coords.longitude;\n            const locPosition = new window.kakao.maps.LatLng(lat, lng);\n            const message = '<div style=\"padding:5px;\">내 현재 위치</div>';\n            displayMarker(locPosition, message);\n            map.setCenter(locPosition);\n          }, () => {\n            const defaultPosition = new window.kakao.maps.LatLng(33.450701, 126.570667);\n            const message = 'geolocation을 사용할 수 없어요..';\n            displayMarker(defaultPosition, message);\n            map.setCenter(defaultPosition);\n          });\n        } else {\n          const defaultPosition = new window.kakao.maps.LatLng(33.450701, 126.570667);\n          const message = 'geolocation을 사용할 수 없어요..';\n          displayMarker(defaultPosition, message);\n          map.setCenter(defaultPosition);\n        }\n      }\n      function displayMarker(locPosition, message) {\n        const marker = new window.kakao.maps.Marker({\n          map: map,\n          position: locPosition\n        });\n        const infowindow = new window.kakao.maps.InfoWindow({\n          content: message,\n          removable: true\n        });\n        infowindow.open(map, marker);\n      }\n\n      // 현재 위치로 이동하는 버튼 추가\n      const moveToLocationButton = document.createElement('button');\n      moveToLocationButton.innerText = '내 위치';\n      moveToLocationButton.style.position = 'absolute';\n      moveToLocationButton.style.bottom = '10px';\n      moveToLocationButton.style.right = '10px';\n      moveToLocationButton.style.zIndex = '10';\n      moveToLocationButton.addEventListener('click', moveToCurrentLocation);\n      document.body.appendChild(moveToLocationButton);\n\n      // 초기 로딩 시 현재 위치로 이동\n      moveToCurrentLocation();\n\n      // 지도와 로드뷰 버튼 클릭 이벤트 설정\n      btnRoadview.addEventListener('click', () => toggleMap(false));\n      btnMap.addEventListener('click', () => toggleMap(true));\n    }\n  }, []);\n};\n_s(useKakaomap, \"epj4qY15NHsef74wNqHIp5fdZmg=\");","map":{"version":3,"names":["useCallback","axios","createMarkerContent","useKakaomap","_s","window","kakao","maps","container","document","getElementById","mapWrapper","btnRoadview","btnMap","rvContainer","mapContainer","placePosition","LatLng","mapOption","center","level","map","Map","roadview","Roadview","setPanoId","setViewpoint","pan","tilt","zoom","mapMarker","Marker","position","event","addListener","rvMarker","toggleMap","active","className","setMaxLevel","addOverlayMapTypeId","MapTypeId","TRAFFIC","mapTypeControl","MapTypeControl","addControl","ControlPosition","RIGHT","zoomControl","ZoomControl","overlays","closeOverlays","forEach","overlay","setMap","searchBar","querySelector","classList","add","setTimeout","style","display","remove","bound","getBounds","swLatlng","getSouthWest","neLatlng","getNorthEast","console","log","toString","url","getLat","getLng","response","get","markerData","data","result","lat","lng","content","marker","CustomOverlay","yAnchor","addEventListener","e","stopPropagation","push","error","resizeHandle","createElement","appendChild","isResizing","startX","startWidth","clientX","offsetWidth","onMouseMove","onMouseUp","newWidth","width","removeEventListener","moveToCurrentLocation","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","locPosition","message","displayMarker","setCenter","defaultPosition","infowindow","InfoWindow","removable","open","moveToLocationButton","innerText","bottom","right","zIndex","body"],"sources":["C:/Users/JMY/IdeaProjects/SC_React_Part/src/component/useKakaomap.js"],"sourcesContent":["import { useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { createMarkerContent } from './markerContents';\r\n\r\nexport const useKakaomap = () => {\r\n  return useCallback(() => {\r\n    if (window.kakao && window.kakao.maps) {\r\n      const container = document.getElementById('container'); // 지도와 로드뷰를 감싸고 있는 div 입니다\r\n      const mapWrapper = document.getElementById('mapWrapper'); // 지도를 감싸고 있는 div 입니다\r\n      const btnRoadview = document.getElementById('btnRoadview'); // 지도 위의 로드뷰 버튼, 클릭하면 지도는 감춰지고 로드뷰가 보입니다\r\n      const btnMap = document.getElementById('btnMap'); // 로드뷰 위의 지도 버튼, 클릭하면 로드뷰는 감춰지고 지도가 보입니다\r\n      const rvContainer = document.getElementById('roadview'); // 로드뷰를 표시할 div 입니다\r\n      const mapContainer = document.getElementById('map'); // 지도를 표시할 div 입니다\r\n\r\n      // 지도와 로드뷰 위에 마커로 표시할 특정 장소의 좌표입니다\r\n      const placePosition = new window.kakao.maps.LatLng(33.450701, 126.570667);\r\n\r\n      // 지도 옵션입니다\r\n      const mapOption = {\r\n        center: placePosition, // 지도의 중심좌표\r\n        level: 3 // 지도의 확대 레벨\r\n      };\r\n\r\n      // 지도를 표시할 div와 지도 옵션으로 지도를 생성합니다\r\n      const map = new window.kakao.maps.Map(mapContainer, mapOption);\r\n\r\n      // 로드뷰 객체를 생성합니다\r\n      const roadview = new window.kakao.maps.Roadview(rvContainer);\r\n\r\n      // 로드뷰의 위치를 특정 장소를 포함하는 파노라마 ID로 설정합니다\r\n      roadview.setPanoId(1023434522, placePosition);\r\n\r\n      // 특정 장소가 잘 보이도록 로드뷰의 적절한 시점(ViewPoint)을 설정합니다\r\n      roadview.setViewpoint({\r\n        pan: 321,\r\n        tilt: 0,\r\n        zoom: 0\r\n      });\r\n\r\n      // 지도 중심을 표시할 마커를 생성하고 특정 장소 위에 표시합니다\r\n      const mapMarker = new window.kakao.maps.Marker({\r\n        position: placePosition,\r\n        map: map\r\n      });\r\n\r\n      // 로드뷰 초기화가 완료되면\r\n      window.kakao.maps.event.addListener(roadview, 'init', function() {\r\n        // 로드뷰에 특정 장소를 표시할 마커를 생성하고 로드뷰 위에 표시합니다\r\n        const rvMarker = new window.kakao.maps.Marker({\r\n          position: placePosition,\r\n          map: roadview\r\n        });\r\n      });\r\n\r\n      // 지도와 로드뷰를 감싸고 있는 div의 class를 변경하여 지도를 숨기거나 보이게 하는 함수입니다\r\n      function toggleMap(active) {\r\n        if (active) {\r\n          // 지도가 보이도록 지도와 로드뷰를 감싸고 있는 div의 class를 변경합니다\r\n          container.className = \"view_map\";\r\n        } else {\r\n          // 지도가 숨겨지도록 지도와 로드뷰를 감싸고 있는 div의 class를 변경합니다\r\n          container.className = \"view_roadview\";\r\n        }\r\n      }\r\n\r\n      // 여기서부터 기존 코드를 사용하여 추가적인 설정을 진행합니다\r\n      map.setMaxLevel(5);\r\n      map.addOverlayMapTypeId(window.kakao.maps.MapTypeId.TRAFFIC);\r\n      const mapTypeControl = new window.kakao.maps.MapTypeControl();\r\n      map.addControl(mapTypeControl, window.kakao.maps.ControlPosition.RIGHT);\r\n      const zoomControl = new window.kakao.maps.ZoomControl();\r\n      map.addControl(zoomControl, window.kakao.maps.ControlPosition.RIGHT);\r\n\r\n      const overlays = [];\r\n\r\n      function closeOverlays() {\r\n        overlays.forEach((overlay) => {\r\n          overlay.setMap(null);\r\n        });\r\n\r\n        const searchBar = document.querySelector('.search-block');\r\n        if (searchBar) {\r\n          searchBar.classList.add('fade-out');\r\n          setTimeout(() => {\r\n            searchBar.style.display = 'none';\r\n            searchBar.classList.remove('fade-out');\r\n          }, 500);\r\n        }\r\n      }\r\n\r\n      window.kakao.maps.event.addListener(map, 'idle', async function() {\r\n        const bound = map.getBounds();\r\n        const swLatlng = bound.getSouthWest();\r\n        const neLatlng = bound.getNorthEast();\r\n\r\n        console.log(`<p>남서쪽 위경도 : ${swLatlng.toString()}, 북동쪽 위경도 : ${neLatlng.toString()}</p>`);\r\n\r\n        const url = `/charger/search/marker?swLat=${swLatlng.getLat()}&swLng=${swLatlng.getLng()}&neLat=${neLatlng.getLat()}&neLng=${neLatlng.getLng()}`;\r\n        console.log('Request URL:', url);\r\n\r\n        try {\r\n          const response = await axios.get(url);\r\n          const markerData = response.data.result;\r\n\r\n          markerData.forEach((data) => {\r\n            const position = new window.kakao.maps.LatLng(data.lat, data.lng);\r\n            const content = createMarkerContent(data);\r\n\r\n            const marker = new window.kakao.maps.Marker({\r\n              position: position,\r\n              map: map\r\n            });\r\n\r\n            const overlay = new window.kakao.maps.CustomOverlay({\r\n              position: position,\r\n              content: content,\r\n              yAnchor: 1\r\n            });\r\n\r\n            window.kakao.maps.event.addListener(marker, 'click', function() {\r\n              closeOverlays();\r\n              overlay.setMap(map);\r\n\r\n              content.addEventListener('click', (e) => {\r\n                e.stopPropagation();\r\n              });\r\n            });\r\n\r\n            overlays.push(overlay);\r\n          });\r\n\r\n          console.log('서버 응답', response.data);\r\n        } catch (error) {\r\n          console.error('GET 요청 에러', error);\r\n        }\r\n      });\r\n\r\n      window.kakao.maps.event.addListener(map, 'click', function() {\r\n        closeOverlays();\r\n      });\r\n\r\n      const searchBar = document.querySelector('.search-block');\r\n      if (searchBar) {\r\n        const resizeHandle = document.createElement('div');\r\n        resizeHandle.className = 'resize-handle';\r\n        searchBar.appendChild(resizeHandle);\r\n\r\n        let isResizing = false;\r\n        let startX = 0;\r\n        let startWidth = 0;\r\n\r\n        resizeHandle.addEventListener('mousedown', (e) => {\r\n          isResizing = true;\r\n          startX = e.clientX;\r\n          startWidth = searchBar.offsetWidth;\r\n          document.addEventListener('mousemove', onMouseMove);\r\n          document.addEventListener('mouseup', onMouseUp);\r\n        });\r\n\r\n        function onMouseMove(e) {\r\n          if (!isResizing) return;\r\n          const newWidth = startWidth + (e.clientX - startX);\r\n          if (newWidth < 435) return;\r\n          searchBar.style.width = `${newWidth}px`;\r\n        }\r\n\r\n        function onMouseUp() {\r\n          isResizing = false;\r\n          document.removeEventListener('mousemove', onMouseMove);\r\n          document.removeEventListener('mouseup', onMouseUp);\r\n        }\r\n      }\r\n\r\n      function moveToCurrentLocation() {\r\n        if (navigator.geolocation) {\r\n          navigator.geolocation.getCurrentPosition((position) => {\r\n            const lat = position.coords.latitude;\r\n            const lng = position.coords.longitude;\r\n            const locPosition = new window.kakao.maps.LatLng(lat, lng);\r\n            const message = '<div style=\"padding:5px;\">내 현재 위치</div>';\r\n\r\n            displayMarker(locPosition, message);\r\n            map.setCenter(locPosition);\r\n          }, () => {\r\n            const defaultPosition = new window.kakao.maps.LatLng(33.450701, 126.570667);\r\n            const message = 'geolocation을 사용할 수 없어요..';\r\n            displayMarker(defaultPosition, message);\r\n            map.setCenter(defaultPosition);\r\n          });\r\n        } else {\r\n          const defaultPosition = new window.kakao.maps.LatLng(33.450701, 126.570667);\r\n          const message = 'geolocation을 사용할 수 없어요..';\r\n          displayMarker(defaultPosition, message);\r\n          map.setCenter(defaultPosition);\r\n        }\r\n      }\r\n\r\n      function displayMarker(locPosition, message) {\r\n        const marker = new window.kakao.maps.Marker({\r\n          map: map,\r\n          position: locPosition\r\n        });\r\n\r\n        const infowindow = new window.kakao.maps.InfoWindow({\r\n          content: message,\r\n          removable: true\r\n        });\r\n\r\n        infowindow.open(map, marker);\r\n      }\r\n\r\n      // 현재 위치로 이동하는 버튼 추가\r\n      const moveToLocationButton = document.createElement('button');\r\n      moveToLocationButton.innerText = '내 위치';\r\n      moveToLocationButton.style.position = 'absolute';\r\n      moveToLocationButton.style.bottom = '10px';\r\n      moveToLocationButton.style.right = '10px';\r\n      moveToLocationButton.style.zIndex = '10';\r\n      moveToLocationButton.addEventListener('click', moveToCurrentLocation);\r\n\r\n      document.body.appendChild(moveToLocationButton);\r\n\r\n      // 초기 로딩 시 현재 위치로 이동\r\n      moveToCurrentLocation();\r\n\r\n      // 지도와 로드뷰 버튼 클릭 이벤트 설정\r\n      btnRoadview.addEventListener('click', () => toggleMap(false));\r\n      btnMap.addEventListener('click', () => toggleMap(true));\r\n    }\r\n  }, []);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}