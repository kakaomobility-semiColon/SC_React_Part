{"ast":null,"code":"var _jsxFileName = \"/Users/goseoyeong/Documents/\\u1112\\u1161\\u11AB\\u1100\\u116E\\u11A8\\u110B\\u116C\\u1103\\u1162/4-1/\\u110F\\u1162\\u11B8\\u1109\\u1173\\u1110\\u1169\\u11AB\\u1109\\u1165\\u11AF\\u1100\\u1168\\u1106\\u1175\\u11BE\\u1109\\u1175\\u11AF\\u1109\\u1173\\u11B8/semi/SC_React_Part/src/component/Kakao.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport './Kakao.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Kakao() {\n  _s();\n  const [allMarkerData, setAllMarkerData] = useState([]);\n  const [map, setMap] = useState(null);\n  const [overlays, setOverlays] = useState([]);\n  const loadMap = useCallback(() => {\n    const script = document.createElement(\"script\");\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAOMAP_API_KEY}&libraries=services,drawing`;\n    script.async = true;\n    script.onload = () => {\n      mapscript();\n    };\n    script.onerror = error => {\n      console.error(\"Error loading Kakao maps script:\", error);\n    };\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []);\n  const mapscript = useCallback(() => {\n    if (window.kakao && window.kakao.maps) {\n      var container = document.getElementById('map');\n      var options = {\n        center: new window.kakao.maps.LatLng(37.336382765356035, 127.26531823399158),\n        level: 3\n      };\n      const mapInstance = new window.kakao.maps.Map(container, options);\n      setMap(mapInstance);\n      mapInstance.addOverlayMapTypeId(window.kakao.maps.MapTypeId.TRAFFIC);\n      var mapTypeControl = new window.kakao.maps.MapTypeControl();\n      mapInstance.addControl(mapTypeControl, window.kakao.maps.ControlPosition.RIGHT);\n      var zoomControl = new window.kakao.maps.ZoomControl();\n      mapInstance.addControl(zoomControl, window.kakao.maps.ControlPosition.RIGHT);\n      window.kakao.maps.event.addListener(mapInstance, \"click\", closeOverlays);\n      window.kakao.maps.event.addListener(mapInstance, 'bounds_changed', function () {\n        updateMarkers(mapInstance);\n      });\n      axios.get(`${process.env.REACT_APP_SERVER_URL}/charger/all`).then(response => {\n        if (response.data.success) {\n          setAllMarkerData(response.data.result); // 전체 마커 데이터 저장\n        } else {\n          console.log('서버 응답 실패', response.data.message);\n        }\n      }).catch(error => {\n        console.log('GET 요청 에러', error);\n      });\n    }\n  }, []);\n  const updateMarkers = useCallback(mapInstance => {\n    if (!mapInstance) return;\n    const bounds = mapInstance.getBounds();\n    const swLatlng = bounds.getSouthWest();\n    const neLatlng = bounds.getNorthEast();\n    const visibleMarkers = allMarkerData.filter(marker => {\n      return marker.lat >= swLatlng.getLat() && marker.lat <= neLatlng.getLat() && marker.lng >= swLatlng.getLng() && marker.lng <= neLatlng.getLng();\n    });\n    overlays.forEach(overlay => overlay.setMap(null)); // 기존 오버레이 제거\n    const newOverlays = visibleMarkers.map(markerData => {\n      var position = new window.kakao.maps.LatLng(markerData.lat, markerData.lng);\n      var content = `<div class=\"wrap\"> \n                            <div class=\"info\"> \n                                <div class=\"title\"> \n                                    ${markerData.name}  \n                                </div> \n                                <div class=\"body\"> \n                                    <div class=\"desc\"> \n                                        <div class=\"ellipsis\">${markerData.address}</div> \n                                        <div class=\"jibun ellipsis\">${markerData.name}는</div> \n                                        <div class=\"jibun ellipsis\">${markerData.operatorName || 'Unknown'} 회사에서 만든 충전기이다.</div> \n                                    </div> \n                                    <button class=\"img\" id=\"bookmarkButton\"></button> \n                                </div> \n                            </div> \n                        </div>`;\n      var marker = new window.kakao.maps.Marker({\n        position: position,\n        map: mapInstance\n      });\n      var overlay = new window.kakao.maps.CustomOverlay({\n        position: position,\n        content: content,\n        yAnchor: 1\n      });\n      window.kakao.maps.event.addListener(marker, \"click\", function () {\n        closeOverlays();\n        overlay.setMap(mapInstance);\n      });\n      return overlay;\n    });\n    setOverlays(newOverlays);\n  }, [allMarkerData, overlays]);\n  const closeOverlays = useCallback(() => {\n    overlays.forEach(overlay => overlay.setMap(null));\n  }, [overlays]);\n  useEffect(() => {\n    loadMap();\n  }, [loadMap]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: \"100%\",\n      height: \"100vh\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n_s(Kakao, \"rpo1Zw78Cn2AyD+/R2LVsE9uRL4=\");\n_c = Kakao;\nexport default Kakao;\nvar _c;\n$RefreshReg$(_c, \"Kakao\");","map":{"version":3,"names":["React","useEffect","useCallback","useState","axios","jsxDEV","_jsxDEV","Kakao","_s","allMarkerData","setAllMarkerData","map","setMap","overlays","setOverlays","loadMap","script","document","createElement","src","process","env","REACT_APP_KAKAOMAP_API_KEY","async","onload","mapscript","onerror","error","console","body","appendChild","removeChild","window","kakao","maps","container","getElementById","options","center","LatLng","level","mapInstance","Map","addOverlayMapTypeId","MapTypeId","TRAFFIC","mapTypeControl","MapTypeControl","addControl","ControlPosition","RIGHT","zoomControl","ZoomControl","event","addListener","closeOverlays","updateMarkers","get","REACT_APP_SERVER_URL","then","response","data","success","result","log","message","catch","bounds","getBounds","swLatlng","getSouthWest","neLatlng","getNorthEast","visibleMarkers","filter","marker","lat","getLat","lng","getLng","forEach","overlay","newOverlays","markerData","position","content","name","address","operatorName","Marker","CustomOverlay","yAnchor","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/goseoyeong/Documents/한국외대/4-1/캡스톤설계및실습/semi/SC_React_Part/src/component/Kakao.js"],"sourcesContent":["import React, { useEffect, useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport './Kakao.css';\n\nfunction Kakao() {\n    const [allMarkerData, setAllMarkerData] = useState([]);\n    const [map, setMap] = useState(null);\n    const [overlays, setOverlays] = useState([]);\n\n    const loadMap = useCallback(() => {\n        const script = document.createElement(\"script\");\n        script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${process.env.REACT_APP_KAKAOMAP_API_KEY}&libraries=services,drawing`;\n        script.async = true;\n        script.onload = () => {\n            mapscript();\n        };\n        script.onerror = (error) => {\n            console.error(\"Error loading Kakao maps script:\", error);\n        };\n        document.body.appendChild(script);\n\n        return () => {\n            document.body.removeChild(script);\n        };\n    }, []);\n\n    const mapscript = useCallback(() => {\n        if (window.kakao && window.kakao.maps) {\n            var container = document.getElementById('map');\n            var options = {\n                center: new window.kakao.maps.LatLng(37.336382765356035, 127.26531823399158),\n                level: 3\n            };\n            const mapInstance = new window.kakao.maps.Map(container, options);\n            setMap(mapInstance);\n\n            mapInstance.addOverlayMapTypeId(window.kakao.maps.MapTypeId.TRAFFIC);\n            var mapTypeControl = new window.kakao.maps.MapTypeControl();\n            mapInstance.addControl(mapTypeControl, window.kakao.maps.ControlPosition.RIGHT);\n\n            var zoomControl = new window.kakao.maps.ZoomControl();\n            mapInstance.addControl(zoomControl, window.kakao.maps.ControlPosition.RIGHT);\n\n            window.kakao.maps.event.addListener(mapInstance, \"click\", closeOverlays);\n            window.kakao.maps.event.addListener(mapInstance, 'bounds_changed', function () {\n                updateMarkers(mapInstance);\n            });\n\n            axios.get(`${process.env.REACT_APP_SERVER_URL}/charger/all`)\n                .then(response => {\n                    if (response.data.success) {\n                        setAllMarkerData(response.data.result); // 전체 마커 데이터 저장\n                    } else {\n                        console.log('서버 응답 실패', response.data.message);\n                    }\n                })\n                .catch(error => {\n                    console.log('GET 요청 에러', error);\n                });\n        }\n    }, []);\n\n    const updateMarkers = useCallback((mapInstance) => {\n        if (!mapInstance) return;\n\n        const bounds = mapInstance.getBounds();\n        const swLatlng = bounds.getSouthWest();\n        const neLatlng = bounds.getNorthEast();\n\n        const visibleMarkers = allMarkerData.filter(marker => {\n            return marker.lat >= swLatlng.getLat() && marker.lat <= neLatlng.getLat() &&\n                marker.lng >= swLatlng.getLng() && marker.lng <= neLatlng.getLng();\n        });\n\n        overlays.forEach((overlay) => overlay.setMap(null)); // 기존 오버레이 제거\n        const newOverlays = visibleMarkers.map((markerData) => {\n            var position = new window.kakao.maps.LatLng(markerData.lat, markerData.lng);\n            var content = `<div class=\"wrap\"> \n                            <div class=\"info\"> \n                                <div class=\"title\"> \n                                    ${markerData.name}  \n                                </div> \n                                <div class=\"body\"> \n                                    <div class=\"desc\"> \n                                        <div class=\"ellipsis\">${markerData.address}</div> \n                                        <div class=\"jibun ellipsis\">${markerData.name}는</div> \n                                        <div class=\"jibun ellipsis\">${markerData.operatorName || 'Unknown'} 회사에서 만든 충전기이다.</div> \n                                    </div> \n                                    <button class=\"img\" id=\"bookmarkButton\"></button> \n                                </div> \n                            </div> \n                        </div>`;\n\n            var marker = new window.kakao.maps.Marker({\n                position: position,\n                map: mapInstance\n            });\n\n            var overlay = new window.kakao.maps.CustomOverlay({\n                position: position,\n                content: content,\n                yAnchor: 1\n            });\n\n            window.kakao.maps.event.addListener(marker, \"click\", function () {\n                closeOverlays();\n                overlay.setMap(mapInstance);\n            });\n\n            return overlay;\n        });\n\n        setOverlays(newOverlays);\n    }, [allMarkerData, overlays]);\n\n    const closeOverlays = useCallback(() => {\n        overlays.forEach((overlay) => overlay.setMap(null));\n    }, [overlays]);\n\n    useEffect(() => {\n        loadMap();\n    }, [loadMap]);\n\n    return (\n        <div id=\"map\" style={{ width: \"100%\", height: \"100vh\" }}></div>\n    );\n}\n\nexport default Kakao;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,OAAO,GAAGb,WAAW,CAAC,MAAM;IAC9B,MAAMc,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAI,0CAAyCC,OAAO,CAACC,GAAG,CAACC,0BAA2B,6BAA4B;IAC1HN,MAAM,CAACO,KAAK,GAAG,IAAI;IACnBP,MAAM,CAACQ,MAAM,GAAG,MAAM;MAClBC,SAAS,CAAC,CAAC;IACf,CAAC;IACDT,MAAM,CAACU,OAAO,GAAIC,KAAK,IAAK;MACxBC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC5D,CAAC;IACDV,QAAQ,CAACY,IAAI,CAACC,WAAW,CAACd,MAAM,CAAC;IAEjC,OAAO,MAAM;MACTC,QAAQ,CAACY,IAAI,CAACE,WAAW,CAACf,MAAM,CAAC;IACrC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,SAAS,GAAGvB,WAAW,CAAC,MAAM;IAChC,IAAI8B,MAAM,CAACC,KAAK,IAAID,MAAM,CAACC,KAAK,CAACC,IAAI,EAAE;MACnC,IAAIC,SAAS,GAAGlB,QAAQ,CAACmB,cAAc,CAAC,KAAK,CAAC;MAC9C,IAAIC,OAAO,GAAG;QACVC,MAAM,EAAE,IAAIN,MAAM,CAACC,KAAK,CAACC,IAAI,CAACK,MAAM,CAAC,kBAAkB,EAAE,kBAAkB,CAAC;QAC5EC,KAAK,EAAE;MACX,CAAC;MACD,MAAMC,WAAW,GAAG,IAAIT,MAAM,CAACC,KAAK,CAACC,IAAI,CAACQ,GAAG,CAACP,SAAS,EAAEE,OAAO,CAAC;MACjEzB,MAAM,CAAC6B,WAAW,CAAC;MAEnBA,WAAW,CAACE,mBAAmB,CAACX,MAAM,CAACC,KAAK,CAACC,IAAI,CAACU,SAAS,CAACC,OAAO,CAAC;MACpE,IAAIC,cAAc,GAAG,IAAId,MAAM,CAACC,KAAK,CAACC,IAAI,CAACa,cAAc,CAAC,CAAC;MAC3DN,WAAW,CAACO,UAAU,CAACF,cAAc,EAAEd,MAAM,CAACC,KAAK,CAACC,IAAI,CAACe,eAAe,CAACC,KAAK,CAAC;MAE/E,IAAIC,WAAW,GAAG,IAAInB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACkB,WAAW,CAAC,CAAC;MACrDX,WAAW,CAACO,UAAU,CAACG,WAAW,EAAEnB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACe,eAAe,CAACC,KAAK,CAAC;MAE5ElB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACmB,KAAK,CAACC,WAAW,CAACb,WAAW,EAAE,OAAO,EAAEc,aAAa,CAAC;MACxEvB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACmB,KAAK,CAACC,WAAW,CAACb,WAAW,EAAE,gBAAgB,EAAE,YAAY;QAC3Ee,aAAa,CAACf,WAAW,CAAC;MAC9B,CAAC,CAAC;MAEFrC,KAAK,CAACqD,GAAG,CAAE,GAAErC,OAAO,CAACC,GAAG,CAACqC,oBAAqB,cAAa,CAAC,CACvDC,IAAI,CAACC,QAAQ,IAAI;QACd,IAAIA,QAAQ,CAACC,IAAI,CAACC,OAAO,EAAE;UACvBpD,gBAAgB,CAACkD,QAAQ,CAACC,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC;QAC5C,CAAC,MAAM;UACHnC,OAAO,CAACoC,GAAG,CAAC,UAAU,EAAEJ,QAAQ,CAACC,IAAI,CAACI,OAAO,CAAC;QAClD;MACJ,CAAC,CAAC,CACDC,KAAK,CAACvC,KAAK,IAAI;QACZC,OAAO,CAACoC,GAAG,CAAC,WAAW,EAAErC,KAAK,CAAC;MACnC,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM6B,aAAa,GAAGtD,WAAW,CAAEuC,WAAW,IAAK;IAC/C,IAAI,CAACA,WAAW,EAAE;IAElB,MAAM0B,MAAM,GAAG1B,WAAW,CAAC2B,SAAS,CAAC,CAAC;IACtC,MAAMC,QAAQ,GAAGF,MAAM,CAACG,YAAY,CAAC,CAAC;IACtC,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,YAAY,CAAC,CAAC;IAEtC,MAAMC,cAAc,GAAGhE,aAAa,CAACiE,MAAM,CAACC,MAAM,IAAI;MAClD,OAAOA,MAAM,CAACC,GAAG,IAAIP,QAAQ,CAACQ,MAAM,CAAC,CAAC,IAAIF,MAAM,CAACC,GAAG,IAAIL,QAAQ,CAACM,MAAM,CAAC,CAAC,IACrEF,MAAM,CAACG,GAAG,IAAIT,QAAQ,CAACU,MAAM,CAAC,CAAC,IAAIJ,MAAM,CAACG,GAAG,IAAIP,QAAQ,CAACQ,MAAM,CAAC,CAAC;IAC1E,CAAC,CAAC;IAEFlE,QAAQ,CAACmE,OAAO,CAAEC,OAAO,IAAKA,OAAO,CAACrE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrD,MAAMsE,WAAW,GAAGT,cAAc,CAAC9D,GAAG,CAAEwE,UAAU,IAAK;MACnD,IAAIC,QAAQ,GAAG,IAAIpD,MAAM,CAACC,KAAK,CAACC,IAAI,CAACK,MAAM,CAAC4C,UAAU,CAACP,GAAG,EAAEO,UAAU,CAACL,GAAG,CAAC;MAC3E,IAAIO,OAAO,GAAI;AAC3B;AACA;AACA,sCAAsCF,UAAU,CAACG,IAAK;AACtD;AACA;AACA;AACA,gEAAgEH,UAAU,CAACI,OAAQ;AACnF,sEAAsEJ,UAAU,CAACG,IAAK;AACtF,sEAAsEH,UAAU,CAACK,YAAY,IAAI,SAAU;AAC3G;AACA;AACA;AACA;AACA,+BAA+B;MAEnB,IAAIb,MAAM,GAAG,IAAI3C,MAAM,CAACC,KAAK,CAACC,IAAI,CAACuD,MAAM,CAAC;QACtCL,QAAQ,EAAEA,QAAQ;QAClBzE,GAAG,EAAE8B;MACT,CAAC,CAAC;MAEF,IAAIwC,OAAO,GAAG,IAAIjD,MAAM,CAACC,KAAK,CAACC,IAAI,CAACwD,aAAa,CAAC;QAC9CN,QAAQ,EAAEA,QAAQ;QAClBC,OAAO,EAAEA,OAAO;QAChBM,OAAO,EAAE;MACb,CAAC,CAAC;MAEF3D,MAAM,CAACC,KAAK,CAACC,IAAI,CAACmB,KAAK,CAACC,WAAW,CAACqB,MAAM,EAAE,OAAO,EAAE,YAAY;QAC7DpB,aAAa,CAAC,CAAC;QACf0B,OAAO,CAACrE,MAAM,CAAC6B,WAAW,CAAC;MAC/B,CAAC,CAAC;MAEF,OAAOwC,OAAO;IAClB,CAAC,CAAC;IAEFnE,WAAW,CAACoE,WAAW,CAAC;EAC5B,CAAC,EAAE,CAACzE,aAAa,EAAEI,QAAQ,CAAC,CAAC;EAE7B,MAAM0C,aAAa,GAAGrD,WAAW,CAAC,MAAM;IACpCW,QAAQ,CAACmE,OAAO,CAAEC,OAAO,IAAKA,OAAO,CAACrE,MAAM,CAAC,IAAI,CAAC,CAAC;EACvD,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC;EAEdZ,SAAS,CAAC,MAAM;IACZc,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,oBACIT,OAAA;IAAKsF,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEvE;AAAC3F,EAAA,CA1HQD,KAAK;AAAA6F,EAAA,GAAL7F,KAAK;AA4Hd,eAAeA,KAAK;AAAC,IAAA6F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}