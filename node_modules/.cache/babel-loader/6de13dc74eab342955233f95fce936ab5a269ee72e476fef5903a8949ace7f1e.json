{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JMY\\\\IdeaProjects\\\\SC_React_Part\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './component/Header';\nimport Kakao from './component/Kakao';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { dummyData } from './component/dummyData';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searching, setSearching] = useState(false);\n  const [items, setItems] = useState([]);\n  const {\n    stationChargerId,\n    name,\n    address,\n    operatorName,\n    output\n  } = dummyData.result;\n  useEffect(() => {\n    if (searching) {\n      console.log('Searching...');\n      // 검색 시작 시 필요한 로직 작성\n      // 여기에서는 임시로 setTimeout을 사용하여 1초 후에 검색이 완료되었다고 가정하겠습니다.\n      setTimeout(() => {\n        setItems(['item1', 'item2', 'item3']); // 임시로 데이터 설정\n        setSearching(false);\n      }, 1000);\n    }\n  }, [searching]);\n  const loadItems = keyword => {\n    // 검색을 시작하면 searching 상태를 true로 변경하여 useEffect가 실행되도록 합니다.\n    setSearching(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onSearch: keyword => loadItems(keyword)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Kakao, {\n        items: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kx/9bRrzQkUTx8uFctnuEFyXDjY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Kakao","BrowserRouter","Router","dummyData","jsxDEV","_jsxDEV","App","_s","searching","setSearching","items","setItems","stationChargerId","name","address","operatorName","output","result","console","log","setTimeout","loadItems","keyword","children","className","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/JMY/IdeaProjects/SC_React_Part/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './component/Header';\r\nimport Kakao from './component/Kakao';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { dummyData } from './component/dummyData';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [searching, setSearching] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n  const { stationChargerId, name, address, operatorName, output } = dummyData.result;\r\n\r\n  useEffect(() => {\r\n    if (searching) {\r\n      console.log('Searching...');\r\n      // 검색 시작 시 필요한 로직 작성\r\n      // 여기에서는 임시로 setTimeout을 사용하여 1초 후에 검색이 완료되었다고 가정하겠습니다.\r\n      setTimeout(() => {\r\n        setItems(['item1', 'item2', 'item3']); // 임시로 데이터 설정\r\n        setSearching(false);\r\n      }, 1000);\r\n    }\r\n  }, [searching]);\r\n\r\n  const loadItems = (keyword) => {\r\n    // 검색을 시작하면 searching 상태를 true로 변경하여 useEffect가 실행되도록 합니다.\r\n    setSearching(true);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className='App'>\r\n        <Header onSearch={(keyword) => loadItems(keyword)} />  \r\n        <Kakao items={items}/>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,aAAa,IAAIC,MAAM,QAAQ,kBAAkB;AAC1D,SAASC,SAAS,QAAQ,uBAAuB;AACjD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEe,gBAAgB;IAAEC,IAAI;IAAEC,OAAO;IAAEC,YAAY;IAAEC;EAAO,CAAC,GAAGb,SAAS,CAACc,MAAM;EAElFnB,SAAS,CAAC,MAAM;IACd,IAAIU,SAAS,EAAE;MACbU,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3B;MACA;MACAC,UAAU,CAAC,MAAM;QACfT,QAAQ,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;QACvCF,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC,EAAE,CAACD,SAAS,CAAC,CAAC;EAEf,MAAMa,SAAS,GAAIC,OAAO,IAAK;IAC7B;IACAb,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACEJ,OAAA,CAACH,MAAM;IAAAqB,QAAA,eACLlB,OAAA;MAAKmB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBlB,OAAA,CAACN,MAAM;QAAC0B,QAAQ,EAAGH,OAAO,IAAKD,SAAS,CAACC,OAAO;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrDxB,OAAA,CAACL,KAAK;QAACU,KAAK,EAAEA;MAAM;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACtB,EAAA,CA9BQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}